{"mappings":"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,eAAeA;AACvB3K,QAAQe,UAAUA;AAClBf,QAAQgE,iBAAiBA;AACzBhE,QAAQiD,iBAAiBA;AACzBjD,QAAQmI,iBAAiBA;AACzBnI,QAAQmD,mBAAmBA;AAC3BnD,QAAQwC,iBAAiBA;AACzBxC,QAAQrD,SAASA;AACjBqD,QAAQY,gBAAgBA;AACxBZ,QAAQ4K,iBAAiBA;AACzB5K,QAAQmG,kBAAkBA;AAC1BnG,QAAQoJ,eAAeA;AACvBpJ,QAAQ8J,WAAWA;AACnB9J,QAAQqI,YAAYA;AACpBrI,QAAQ6H,eAAeA;;;AC7iBvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClvexxnjnYA,MAAMgD,UAAU,GAAG,IAAnB;AACA,MAAMC,UAAU,GAAG,IAAnB;AACA,MAAM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","sources":["../../../../../usr/local/lib/node_modules/parcel/node_modules/@parcel/runtime-browser-hmr/lib/HMRRuntime.js","./src/index.js","./node_modules/vue/index.js","./node_modules/vue/dist/vue.cjs.js","./node_modules/@vue/compiler-dom/index.js","./node_modules/@vue/compiler-dom/dist/compiler-dom.cjs.js","./node_modules/@vue/compiler-core/index.js","./node_modules/@vue/compiler-core/dist/compiler-core.cjs.js","./node_modules/@vue/shared/index.js","./node_modules/@vue/shared/dist/shared.cjs.js","./node_modules/source-map/source-map.js","./node_modules/source-map/lib/source-map-generator.js","./node_modules/source-map/lib/base64-vlq.js","./node_modules/source-map/lib/base64.js","./node_modules/source-map/lib/util.js","./node_modules/source-map/lib/array-set.js","./node_modules/source-map/lib/mapping-list.js","./node_modules/source-map/lib/source-map-consumer.js","./node_modules/source-map/lib/binary-search.js","./node_modules/source-map/lib/quick-sort.js","./node_modules/source-map/lib/source-node.js","./node_modules/@babel/parser/src/tokenizer/types.js","./node_modules/@babel/parser/src/util/whitespace.js","./node_modules/@babel/parser/src/util/location.js","./node_modules/@babel/parser/src/parser/base.js","./node_modules/@babel/parser/src/parser/comments.js","./node_modules/@babel/parser/src/parser/error-message.js","./node_modules/@babel/parser/src/parser/error.js","./node_modules/@babel/parser/src/plugins/estree.js","./node_modules/@babel/parser/src/tokenizer/context.js","./node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts","./node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts","./node_modules/@babel/parser/src/util/identifier.js","./node_modules/@babel/parser/src/util/scopeflags.js","./node_modules/@babel/parser/src/util/scope.js","./node_modules/@babel/parser/src/plugins/flow/scope.js","./node_modules/@babel/parser/src/plugins/flow/index.js","./node_modules/@babel/parser/src/plugins/jsx/xhtml.js","./node_modules/@babel/parser/src/plugins/jsx/index.js","./node_modules/@babel/parser/src/plugins/typescript/scope.js","./node_modules/@babel/parser/src/util/production-parameter.js","./node_modules/@babel/parser/src/plugins/typescript/index.js","./node_modules/@babel/parser/src/plugins/placeholders.js","./node_modules/@babel/parser/src/plugins/v8intrinsic.js","./node_modules/@babel/parser/src/plugin-utils.js","./node_modules/@babel/parser/src/options.js","./node_modules/@babel/parser/src/tokenizer/state.js","./node_modules/@babel/parser/src/tokenizer/index.js","./node_modules/@babel/parser/src/util/class-scope.js","./node_modules/@babel/parser/src/util/expression-scope.js","./node_modules/@babel/parser/src/parser/util.js","./node_modules/@babel/parser/src/parser/node.js","./node_modules/@babel/parser/src/parser/lval.js","./node_modules/@babel/parser/src/parser/expression.js","./node_modules/@babel/parser/src/parser/statement.js","./node_modules/@babel/parser/src/parser/index.js","./node_modules/@babel/parser/src/index.js","./node_modules/estree-walker/dist/umd/estree-walker.js","./node_modules/@vue/runtime-dom/index.js","./node_modules/@vue/runtime-dom/dist/runtime-dom.cjs.js","./node_modules/@vue/runtime-core/index.js","./node_modules/@vue/runtime-core/dist/runtime-core.cjs.js","./node_modules/@vue/reactivity/index.js","./node_modules/@vue/reactivity/dist/reactivity.cjs.js","../../../../../usr/local/lib/node_modules/parcel/node_modules/@parcel/transformer-js/lib/esmodule-helpers.js","./src/App.vue","./src/components/PageTitle.vue","./src/components/PricingCard/PricingCard.vue","./src/components/PricingCard/PricingCardHeader.vue","./src/components/UI/BaseSlider.vue","./src/components/UI/BaseSwitchButton.vue","./src/components/UI/BaseButton.vue"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _plugin() {\n  const data = require(\"@parcel/plugin\");\n\n  _plugin = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n\n  _fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _utils() {\n  const data = require(\"@parcel/utils\");\n\n  _utils = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst HMR_RUNTIME = _fs().default.readFileSync(_path().default.join(__dirname, './loaders/hmr-runtime.js'), 'utf8');\n\nvar _default = new (_plugin().Runtime)({\n  apply({\n    bundle,\n    options\n  }) {\n    if (bundle.type !== 'js' || !options.hmrOptions) {\n      return;\n    }\n\n    const {\n      host,\n      port\n    } = options.hmrOptions;\n    return {\n      filePath: __filename,\n      code: `var HMR_HOST = ${JSON.stringify(host != null ? host : null)};` + `var HMR_PORT = ${JSON.stringify(port != null ? port : null)};` + `var HMR_SECURE = ${JSON.stringify(!!(options.serveOptions && options.serveOptions.https))};` + `var HMR_ENV_HASH = \"${(0, _utils().md5FromObject)(bundle.env)}\";` + `module.bundle.HMR_BUNDLE_ID = ${JSON.stringify(bundle.id)};` + HMR_RUNTIME,\n      isEntry: true\n    };\n  }\n\n});\n\nexports.default = _default;",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// @flow\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\nexport class TokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  updateContext: ?(prevType: TokenType) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n}\n\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return new TokenType(name, { beforeExpr, binop });\n}\n\nexport const types: { [name: string]: TokenType } = {\n  num: new TokenType(\"num\", { startsExpr }),\n  bigint: new TokenType(\"bigint\", { startsExpr }),\n  decimal: new TokenType(\"decimal\", { startsExpr }),\n  regexp: new TokenType(\"regexp\", { startsExpr }),\n  string: new TokenType(\"string\", { startsExpr }),\n  name: new TokenType(\"name\", { startsExpr }),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: new TokenType(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: new TokenType(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: new TokenType(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: new TokenType(\"#{\", { beforeExpr, startsExpr }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", { beforeExpr, startsExpr }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", { beforeExpr }),\n  semi: new TokenType(\";\", { beforeExpr }),\n  colon: new TokenType(\":\", { beforeExpr }),\n  doubleColon: new TokenType(\"::\", { beforeExpr }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", { beforeExpr }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", { beforeExpr }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", { beforeExpr }),\n  backQuote: new TokenType(\"`\", { startsExpr }),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr, startsExpr }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: new TokenType(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr, isAssign }),\n  assign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  incDec: new TokenType(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: new TokenType(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: new TokenType(\"~\", { beforeExpr, prefix, startsExpr }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: new TokenType(\"%\", { beforeExpr, binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: new TokenType(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", { isLoop }),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", { isLoop }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n};\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","// @flow\n\nimport { lineBreakG } from \"./whitespace\";\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n\n  constructor(line: number, col: number) {\n    this.line = line;\n    this.column = col;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nexport function getLineInfo(input: string, offset: number): Position {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<*>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: ?string;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  hasPlugin(name: string): boolean {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    // $FlowIssue\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n}\n","// @flow\n\n/**\n * Based on the comment attachment algorithm used in espree and estraverse.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\n\nfunction last<T>(stack: $ReadOnlyArray<T>): T {\n  return stack[stack.length - 1];\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(\n    node: Node,\n    elements: (Node | null)[],\n    // When the current node is followed by a token which hasn't a respective AST node, we\n    // need to take all the trailing comments to prevent them from being attached to an\n    // unrelated node. e.g. in\n    //     var { x } /* cmt */ = { y }\n    // we don't want /* cmt */ to be attached to { y }.\n    // On the other hand, in\n    //     fn(x) [new line] /* cmt */ [new line] y\n    // /* cmt */ is both a trailing comment of fn(x) and a leading comment of y\n    takeAllComments?: boolean,\n  ) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (\n        this.state.leadingComments[j].end < this.state.commentPreviousNode.end\n      ) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        // Perf: we don't need to splice if we are going to reset the array anyway\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n        node.trailingComments.push(leadingComment);\n      }\n    }\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node: Node): void {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n\n    const stack = this.state.commentStack;\n\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      // If the first comment in trailingComments comes after the\n      // current node, then we're good - all comments in the array will\n      // come after the node and so it's safe to add them as official\n      // trailingComments.\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        // Otherwise, if the first comment doesn't come after the\n        // current node, that means we have a mix of leading and trailing\n        // comments in the array and that leadingComments contains the\n        // same items as trailingComments. Reset trailingComments to\n        // zero items and we'll handle this by evaluating leadingComments\n        // later.\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n      if (\n        lastInStack.trailingComments &&\n        lastInStack.trailingComments[0].start >= node.end\n      ) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    // Eating the stack.\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    // Adjust comments that follow a trailing comma on the last element in a\n    // comma separated list of nodes to be the trailing comments on the last\n    // element\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (\n      this.state.commentPreviousNode &&\n      ((this.state.commentPreviousNode.type === \"ImportSpecifier\" &&\n        node.type !== \"ImportSpecifier\") ||\n        (this.state.commentPreviousNode.type === \"ExportSpecifier\" &&\n          node.type !== \"ExportSpecifier\"))\n    ) {\n      this.adjustCommentsAfterTrailingComma(node, [\n        this.state.commentPreviousNode,\n      ]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (\n          lastChild !== node &&\n          lastChild.leadingComments.length > 0 &&\n          last(lastChild.leadingComments).end <= node.start\n        ) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          // A leading comment for an anonymous class had been stolen by its first ClassMethod,\n          // so this takes back the leading comment.\n          // See also: https://github.com/eslint/espree/issues/158\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (\n              this.state.leadingComments[j].end <\n              this.state.commentPreviousNode.end\n            ) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        // https://github.com/eslint/espree/issues/2\n        //\n        // In special cases, such as return (without a value) and\n        // debugger, all comments will end up as leadingComments and\n        // will otherwise be eliminated. This step runs when the\n        // commentStack is empty and there are comments left\n        // in leadingComments.\n        //\n        // This loop figures out the stopping point between the actual\n        // leading and trailing comments by finding the location of the\n        // first comment that comes after the given node.\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        // Split the array based on the location of the first comment\n        // that comes after the node. Keep in mind that this could\n        // result in an empty array, and if so, the array must be\n        // deleted.\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        // Similarly, trailing comments are attached later. The variable\n        // must be reset to null if there are no trailing comments.\n        trailingComments = this.state.leadingComments.slice(i);\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (\n        trailingComments.length &&\n        trailingComments[0].start >= node.start &&\n        last(trailingComments).end <= node.end\n      ) {\n        node.innerComments = trailingComments;\n      } else {\n        // TrailingComments maybe contain innerComments\n        const firstTrailingCommentIndex = trailingComments.findIndex(\n          comment => comment.end >= node.end,\n        );\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(\n            0,\n            firstTrailingCommentIndex,\n          );\n          node.trailingComments = trailingComments.slice(\n            firstTrailingCommentIndex,\n          );\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n}\n","// @flow\n/* eslint sort-keys: \"error\" */\n\n/**\n * @module parser/error-message\n */\n\n// The Errors key follows https://cs.chromium.org/chromium/src/v8/src/common/message-template.h unless it does not exist\nexport const ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function\",\n  AwaitBindingIdentifierInStaticBlock:\n    \"Can not use 'await' as identifier inside a static block\",\n  AwaitExpressionFormalParameter:\n    \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext:\n    \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter:\n    \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport:\n    \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString:\n    \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer:\n    \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString:\n    'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding:\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys:\n    'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate:\n    \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar:\n    \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline:\n    \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn:\n    \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed:\n    \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField:\n    \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper:\n    \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0\",\n});\n","// @flow\n/* eslint sort-keys: \"error\" */\nimport { getLineInfo, type Position } from \"../util/location\";\nimport CommentsParser from \"./comments\";\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\ntype ErrorContext = {\n  pos: number,\n  loc: Position,\n  missingPlugin?: Array<string>,\n  code?: string,\n};\n\nexport type ParsingError = SyntaxError & ErrorContext;\n\nexport { ErrorMessages as Errors } from \"./error-message\";\n\nexport default class ParserError extends CommentsParser {\n  // Forward-declaration: defined in tokenizer/index.js\n  /*::\n  +isLookahead: boolean;\n  */\n\n  getLocationForPosition(pos: number): Position {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;\n    else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;\n    else if (pos === this.state.end) loc = this.state.endLoc;\n    else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;\n    else loc = getLineInfo(this.input, pos);\n\n    return loc;\n  }\n\n  raise(pos: number, errorTemplate: string, ...params: any): Error | empty {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  /**\n   * Raise a parsing error on given position pos. If errorRecovery is true,\n   * it will first search current errors and overwrite the error thrown on the exact\n   * position before with the new error message. If errorRecovery is false, it\n   * fallbacks to `raise`.\n   *\n   * @param {number} pos\n   * @param {string} errorTemplate\n   * @param {...any} params\n   * @returns {(Error | empty)}\n   * @memberof ParserError\n   */\n  raiseOverwrite(\n    pos: number,\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n        if (error.pos === pos) {\n          return Object.assign(error, { message });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n    return this._raise({ loc, pos }, message);\n  }\n\n  raiseWithData(\n    pos: number,\n    data?: {\n      missingPlugin?: Array<string>,\n      code?: string,\n    },\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign(({ loc, pos }: Object), data), message);\n  }\n\n  _raise(errorContext: ErrorContext, message: string): Error | empty {\n    // $FlowIgnore\n    const err: SyntaxError & ErrorContext = new SyntaxError(message);\n    Object.assign(err, errorContext);\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n}\n","// @flow\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parser/error\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    estreeParseRegExpLiteral({ pattern, flags }: N.RegExpLiteral): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    estreeParseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt;\n      try {\n        // $FlowIgnore\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral(value: any): N.Node {\n      return this.parseLiteral(value, \"Literal\");\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.extra.expressionValue;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.end,\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(\n        stmt,\n        \"ExpressionStatement\",\n        directive.end,\n        directive.loc.end,\n      );\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return ((method: any): N.EstreeProperty | N.EstreeMethodDefinition).value\n        .params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    stmtToDirective(stmt: N.Statement): N.Directive {\n      const directive = super.stmtToDirective(stmt);\n      const value = stmt.expression.value;\n\n      // Record the expression value as in estree mode we want\n      // the stmt to have the real value e.g. (\"use strict\") and\n      // not the raw value e.g. (\"use\\\\x20strict\")\n      this.addExtra(directive.value, \"expressionValue\", value);\n\n      return directive;\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      ...args: [?boolean, boolean, TokenType, void | (boolean => void)]\n    ): void {\n      super.parseBlockBody(node, ...args);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      // $FlowIgnore - directives isn't optional in the type definition\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      switch (this.state.type) {\n        case tt.num:\n        case tt.string:\n          return this.estreeParseLiteral(this.state.value);\n\n        case tt.regexp:\n          return this.estreeParseRegExpLiteral(this.state.value);\n\n        case tt.bigint:\n          return this.estreeParseBigIntLiteral(this.state.value);\n\n        case tt.decimal:\n          return this.estreeParseDecimalLiteral(this.state.value);\n\n        case tt._null:\n          return this.estreeParseLiteral(null);\n\n        case tt._true:\n          return this.estreeParseLiteral(true);\n\n        case tt._false:\n          return this.estreeParseLiteral(false);\n\n        default:\n          return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    parseMaybePrivateName(...args: [boolean]): any {\n      const node = super.parseMaybePrivateName(...args);\n      if (\n        node.type === \"PrivateName\" &&\n        this.getPluginOption(\"estree\", \"classFeatures\")\n      ) {\n        return this.convertPrivateNameToPrivateIdentifier(node);\n      }\n      return node;\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = (node: any);\n      delete node.id;\n      node.name = name;\n      node.type = \"PrivateIdentifier\";\n      return node;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n      return node.name;\n    }\n\n    parseLiteral<T: N.Literal>(\n      value: any,\n      type: /*T[\"kind\"]*/ string,\n      startPos?: number,\n      startLoc?: Position,\n    ): T {\n      const node = super.parseLiteral(value, type, startPos, startLoc);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        // $FlowIgnore\n        node.computed = false;\n      }\n      type = \"MethodDefinition\";\n      return this.finishNode(node, type);\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = (super.parseClassProperty(...args): any);\n      if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n        propertyNode.type = \"PropertyDefinition\";\n      }\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = (super.parseClassPrivateProperty(...args): any);\n      if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n        propertyNode.type = \"PropertyDefinition\";\n        propertyNode.computed = false;\n      }\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node != null && this.isObjectProperty(node)) {\n        this.toAssignable(node.value, isLHS);\n\n        return node;\n      }\n\n      return super.toAssignable(node, isLHS);\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node, ...args) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(prop.key.start, Errors.PatternHasAccessor);\n      } else if (prop.method) {\n        this.raise(prop.key.start, Errors.PatternHasMethod);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, ...args);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        // $FlowIgnore - arguments isn't optional in the type definition\n        delete node.arguments;\n        // $FlowIgnore - callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    isOptionalChain(node: N.Node): boolean {\n      return node.type === \"ChainExpression\";\n    }\n\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n  };\n","// @flow\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nimport { types as tt } from \"./types\";\n\nexport class TokContext {\n  constructor(\n    token: string,\n    isExpr?: boolean,\n    preserveSpace?: boolean,\n    override?: ?Function, // Takes a Tokenizer as a this-parameter, and returns void.\n  ) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n  token: string;\n  isExpr: boolean;\n  preserveSpace: boolean;\n  override: ?Function;\n}\n\nexport const types: {\n  [key: string]: TokContext,\n} = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false),\n};\n\n// Token-specific context update code\n// Note that we should avoid accessing `this.prodParam` in context update,\n// because it is executed immediately when last token is consumed, which may be\n// before `this.prodParam` is updated. e.g.\n// ```\n// function *g() { () => yield / 2 }\n// ```\n// When `=>` is eaten, the context update of `yield` is executed, however,\n// `this.prodParam` still has `[Yield]` production because it is not yet updated\n\ntt.parenR.updateContext = tt.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n  if (out === types.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntt.name.updateContext = function (prevType) {\n  let allowed = false;\n  if (prevType !== tt.dot) {\n    if (\n      this.state.value === \"of\" &&\n      !this.state.exprAllowed &&\n      prevType !== tt._function &&\n      prevType !== tt._class\n    ) {\n      allowed = true;\n    }\n  }\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntt.braceL.updateContext = function (prevType) {\n  this.state.context.push(\n    this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.dollarBraceL.updateContext = function () {\n  this.state.context.push(types.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntt.parenL.updateContext = function (prevType) {\n  const statementParens =\n    prevType === tt._if ||\n    prevType === tt._for ||\n    prevType === tt._with ||\n    prevType === tt._while;\n  this.state.context.push(\n    statementParens ? types.parenStatement : types.parenExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.incDec.updateContext = function () {\n  // tokExprAllowed stays unchanged\n};\n\ntt._function.updateContext = tt._class.updateContext = function (prevType) {\n  if (\n    prevType.beforeExpr &&\n    prevType !== tt.semi &&\n    prevType !== tt._else &&\n    !(prevType === tt._return && this.hasPrecedingLineBreak()) &&\n    !(\n      (prevType === tt.colon || prevType === tt.braceL) &&\n      this.curContext() === types.b_stat\n    )\n  ) {\n    this.state.context.push(types.functionExpression);\n  } else {\n    this.state.context.push(types.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntt.backQuote.updateContext = function () {\n  if (this.curContext() === types.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types.template);\n  }\n  this.state.exprAllowed = false;\n};\n\n// we don't need to update context for tt.braceBarL because we do not pop context for tt.braceBarR\ntt.braceHashL.updateContext = function () {\n  this.state.context.push(types.recordExpression);\n  this.state.exprAllowed = true; /* tt.braceHashL.beforeExpr */\n};\n","import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (const char of Array.from(name)) {\n    const cp = char.codePointAt(0);\n    if (isFirst) {\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n      isFirst = false;\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(current: number, next: number): boolean {\n  return current === charCodes.atSign && next === charCodes.atSign;\n}\n","// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b000000_0000_01,\n             BIND_KIND_TYPE             = 0b000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b100000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport * as N from \"../types\";\nimport { Errors } from \"../parser/error\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  flags: ScopeFlags;\n  // A list of var-declared names in the current lexical scope\n  var: string[] = [];\n  // A list of lexically-declared names in the current lexical scope\n  lexical: string[] = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: string[] = [];\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  scopeStack: Array<IScope> = [];\n  declare raise: raiseFunction;\n  declare inModule: boolean;\n  undefinedExports: Map<string, number> = new Map();\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction, inModule: boolean) {\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & SCOPE_FUNCTION ||\n      (!this.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    pos: number,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, Errors.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        scope.functions.indexOf(name) > -1 ||\n        scope.var.indexOf(name) > -1\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        (!this.treatFunctionsAsVarInScope(scope) &&\n          scope.var.indexOf(name) > -1)\n      );\n    }\n\n    return (\n      (scope.lexical.indexOf(name) > -1 &&\n        !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name)) ||\n      (!this.treatFunctionsAsVarInScope(scope) &&\n        scope.functions.indexOf(name) > -1)\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1 &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      this.scopeStack[0].functions.indexOf(id.name) === -1\n    ) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (\n        (scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) &&\n        !(scope.flags & SCOPE_ARROW)\n      ) {\n        return scope;\n      }\n    }\n  }\n}\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: string[] = [];\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.includes(name) &&\n        (scope.lexical.includes(name) || scope.functions.includes(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type Parser from \"../../parser\";\nimport { types as tt, type TokenType } from \"../../tokenizer/types\";\nimport * as N from \"../../types\";\nimport type { Pos, Position } from \"../../util/location\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart, isKeyword } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  type BindingTypes,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { Errors } from \"../../parser/error\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized:\n    \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName:\n    \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues:\n    \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType:\n    \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied:\n    \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType:\n    \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType:\n    \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType:\n    \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName:\n    \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized:\n    \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized:\n    \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  ThisParamAnnotationRequired:\n    \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor:\n    \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst:\n    \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind:\n    \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state: State): boolean {\n  return (\n    (state.type === tt.name || !!state.type.keyword) && state.value !== \"from\"\n  );\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", pos: number, value: N.Node |}\n  | {| type: \"string\", pos: number, value: N.Node |}\n  | {| type: \"boolean\", pos: number, value: N.Node |}\n  | {| type: \"invalid\", pos: number |}\n  | {| type: \"none\", pos: number |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): Class<FlowScopeHandler> {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowType {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(tt.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n      // Force '%' and 'checks' to be adjacent\n      if (\n        moduloLoc.line !== checksLoc.line ||\n        moduloLoc.column !== checksLoc.column - 1\n      ) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(\"type\") && !this.match(tt._typeof)) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n            );\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            \"declare\",\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.DuplicateDeclareModuleExports,\n            );\n          }\n          if (kind === \"ES\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(\"type\") || this.isContextual(\"interface\")) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n\n          throw this.raise(\n            this.state.start,\n            FlowErrors.UnsupportedDeclareExportKind,\n            label,\n            suggestion,\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(\"opaque\") // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(\"interface\") || // declare export interface ...\n          this.isContextual(\"type\") || // declare export type ...\n          this.isContextual(\"opaque\") // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.start,\n      );\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word: string, startLoc: number, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        startLoc,\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        word,\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStart = this.state.start;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      } while (!this.isRelational(\">\"));\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart: ?number = null;\n        let inexactStart: ?number = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n            if (\n              lookahead.type === tt.name ||\n              lookahead.type === tt.string ||\n              lookahead.type === tt.num\n            ) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStart,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStart &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            inexactStart,\n            FlowErrors.UnexpectedExplicitInexactInObject,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStart: ?number,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InexactInsideNonObject,\n            );\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(\n              node.value.this.start,\n              FlowErrors.ThisParamBannedInConstructor,\n            );\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.value.this.start,\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n        );\n      }\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(\n      params: N.FlowFunctionTypeParam[] = [],\n    ): {\n      params: N.FlowFunctionTypeParam[],\n      rest: ?N.FlowFunctionTypeParam,\n      _this: ?N.FlowFunctionTypeParam,\n    } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      let _this: ?N.FlowFunctionTypeParam = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(\n            startPos,\n            startLoc,\n            node,\n            this.parseIdentifier(),\n          );\n\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(tt.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            node.this = tmp._this;\n            this.expect(tt.parenR);\n\n            this.expect(tt.arrow);\n\n            node.returnType = this.flowParseType();\n\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n          break;\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (this.match(tt.name) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            throw this.raise(\n              this.state.start,\n              FlowErrors.UnexpectedSubtractionOperand,\n            );\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start,\n        startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      while (this.match(tt.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(tt.bracketL);\n        this.expect(tt.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      // Ensure that a brace after a function generic type annotation is a\n      // statement, except in arrow functions (noAnonFunctionType)\n      this.state.exprAllowed =\n        this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (\n        this.state.strict &&\n        this.match(tt.name) &&\n        this.state.value === \"interface\"\n      ) {\n        const lookahead = this.lookahead();\n        if (lookahead.type === tt.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            this.match(tt.name) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(tt.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      return (\n        this.isContextual(\"type\") ||\n        this.isContextual(\"interface\") ||\n        this.isContextual(\"opaque\") ||\n        (this.shouldParseEnums() && this.isContextual(\"enum\")) ||\n        super.shouldParseExportDeclaration()\n      );\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (\n        this.match(tt.name) &&\n        (this.state.value === \"type\" ||\n          this.state.value === \"interface\" ||\n          this.state.value === \"opaque\" ||\n          (this.shouldParseEnums() && this.state.value === \"enum\"))\n      ) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      // only use the expensive \"tryParse\" method if there is a question mark\n      // and if we come from inside parens\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() =>\n          super.parseConditional(expr, startPos, startLoc),\n        );\n\n        if (!result.node) {\n          // $FlowIgnore\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingComma,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const pos = this.state.start;\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(\n            member.value.start,\n            FlowErrors.DeclareClassFieldInitializer,\n          );\n        }\n      }\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\": {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type === \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          });\n        }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaPos?: ?number,\n      isLHS: boolean,\n    ): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      ...args:\n        | [string, BindingTypes | void]\n        | [\n            string,\n            BindingTypes | void,\n            ?Set<string>,\n            boolean | void,\n            boolean | void,\n          ]\n    ): void {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // determine whether a parameter is a this param\n    isThisParam(param) {\n      return param.type === \"Identifier\" && param.name === \"this\";\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n        // estree support\n      } else if (\n        // $FlowFixMe flow does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        method.value.params\n      ) {\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n        } else if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n        }\n      }\n    }\n\n    parsePropertyName(\n      node: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n      isPrivateNameAllowed: boolean,\n    ): N.Identifier {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      // $FlowIgnore (\"variance\" not defined on TsNamedTypeElementBase)\n      node.variance = variance;\n      return key;\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n        if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamNoDefault);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n      contextDescription: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n\n        // import type * is not allowed\n        if (kind === \"type\" && lh.type === tt.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (\n          isMaybeDefaultImport(lh) ||\n          lh.type === tt.braceL ||\n          lh.type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(node: N.ImportDeclaration): void {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !this.match(tt.name) &&\n          !this.state.type.keyword\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (\n        specifierTypeKind !== null &&\n        (this.match(tt.name) || this.state.type.keyword)\n      ) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(\n            specifier.start,\n            Errors.ImportBindingIsString,\n            firstIdent.value,\n          );\n        }\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(\n          firstIdentLoc,\n          FlowErrors.ImportTypeShorthandOnlyInPureImport,\n        );\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.start,\n          true,\n          true,\n        );\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () =>\n            super.parseMaybeAssign(\n              refExpressionErrors,\n              afterLeftParse,\n              refNeedsArrowPos,\n            ),\n          state,\n        );\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === tc.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === tc.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (jsx?.error || this.isRelational(\"<\")) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n                refNeedsArrowPos,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {}: any);\n          if (\n            arrowExpression.type !== \"ArrowFunctionExpression\" &&\n            arrowExpression.extra?.parenthesized\n          ) {\n            abort();\n          }\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression: ?(\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n        ) = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                typeParameters.start,\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n              );\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          typeParameters.start,\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n        );\n      }\n\n      return super.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      );\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.isRelational(\"<\")\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (\n        !noCalls &&\n        this.shouldParseTypes() &&\n        this.isRelational(\"<\")\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      let targs = null;\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", (this.state.pos += 2));\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, Errors.UnterminatedComment);\n        }\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(this.state.pos, Errors.UnterminatedComment);\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumBooleanMemberNotInitialized,\n        memberName,\n        enumName,\n      );\n    }\n\n    flowEnumErrorInvalidMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(\n        pos,\n        FlowErrors.EnumInvalidMemberName,\n        memberName,\n        suggestion,\n        enumName,\n      );\n    }\n\n    flowEnumErrorDuplicateMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(\n      pos: number,\n      {\n        enumName,\n        suppliedType,\n      }: { enumName: string, suppliedType: null | string },\n    ) {\n      return this.raise(\n        pos,\n        suppliedType === null\n          ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied\n          : FlowErrors.EnumInvalidExplicitType,\n        enumName,\n        suppliedType,\n      );\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      pos: number,\n      { enumName, explicitType, memberName }: EnumContext,\n    ) {\n      let message = null;\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n        default:\n          // null\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumNumberMemberNotInitialized,\n        enumName,\n        memberName,\n      );\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumStringMemberInconsistentlyInitailized,\n        enumName,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startPos = this.state.start;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n          if (endOfInit()) {\n            return { type: \"number\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt.string: {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n          if (endOfInit()) {\n            return { type: \"string\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral();\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        default:\n          return { type: \"invalid\", pos: startPos };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", pos };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      pos: number,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      members: {|\n        booleanMembers: Array<N.Node>,\n        numberMembers: Array<N.Node>,\n        stringMembers: Array<N.Node>,\n        defaultedMembers: Array<N.Node>,\n      |},\n      hasUnknownMembers: boolean,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.pos,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.pos,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(tt.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null,\n          });\n        }\n\n        const { value } = this.state;\n        this.next();\n\n        if (\n          value !== \"boolean\" &&\n          value !== \"number\" &&\n          value !== \"string\" &&\n          value !== \"symbol\"\n        ) {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value,\n          });\n        }\n\n        return value;\n      }\n      return null;\n    }\n\n    flowEnumBody(node: N.Node, { enumName, nameLoc }): N.Node {\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, { enumName });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start,\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (\n        this.match(tt.name) &&\n        this.state.value === \"of\" &&\n        prevType === tt.name &&\n        this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) ===\n          \"interface\"\n      ) {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    // check if the next token is a tt.relation(\"<\")\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","// @flow\n\nconst entities: { [name: string]: string } = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","// @flow\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { TokenType, types as tt } from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors } from \"../../parser/error\";\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  UnexpectedSequenceExpression:\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n/* eslint-disable sort-keys */\n\n// Be aware that this file is always executed and not only when the plugin is enabled.\n// Therefore this contexts and tokens do always exist.\ntc.j_oTag = new TokContext(\"<tag\", false);\ntc.j_cTag = new TokContext(\"</tag\", false);\ntc.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\n\ntt.jsxName = new TokenType(\"jsxName\");\ntt.jsxText = new TokenType(\"jsxText\", { beforeExpr: true });\ntt.jsxTagStart = new TokenType(\"jsxTagStart\", { startsExpr: true });\ntt.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntt.jsxTagStart.updateContext = function () {\n  this.state.context.push(tc.j_expr); // treat as beginning of JSX expression\n  this.state.context.push(tc.j_oTag); // start opening tag context\n  this.state.exprAllowed = false;\n};\n\ntt.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n  if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === tc.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.exprAllowed) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              const htmlEntity =\n                ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\";\n              const char = this.input[this.state.pos];\n              this.raise(\n                this.state.pos,\n                `Unexpected token \\`${char}\\`. Did you mean \\`${htmlEntity}\\` or \\`{'${char}'}\\`?`,\n              );\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, Errors.UnterminatedString);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      let str = \"\";\n      let count = 0;\n      let entity;\n      let ch = this.input[this.state.pos];\n\n      const startPos = ++this.state.pos;\n      while (this.state.pos < this.length && count++ < 10) {\n        ch = this.input[this.state.pos++];\n        if (ch === \";\") {\n          if (str[0] === \"#\") {\n            if (str[1] === \"x\") {\n              str = str.substr(2);\n              if (HEX_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 16));\n              }\n            } else {\n              str = str.substr(1);\n              if (DECIMAL_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 10));\n              }\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.state.pos = startPos;\n        return \"&\";\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (this.state.type.keyword) {\n        node.name = this.state.type.keyword;\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.next();\n          node = this.jsxParseExpressionContainer(node);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(node.start, JsxErrors.AttributeIsEmpty);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEnd,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(\n        node,\n        \"JSXEmptyExpression\",\n        this.state.start,\n        this.state.startLoc,\n      );\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(\n              expression.expressions[1].start,\n              JsxErrors.UnexpectedSequenceExpression,\n            );\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (isFragment(openingElement) && !isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagFragment,\n          );\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagElement,\n            getQualifiedJSXName(openingElement.name),\n          );\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(\n              // $FlowIgnore\n              closingElement.start,\n              JsxErrors.MissingClosingTagElement,\n              getQualifiedJSXName(openingElement.name),\n            );\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.isRelational(\"<\")) {\n        throw this.raise(\n          this.state.start,\n          JsxErrors.UnwrappedAdjacentJSXElements,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.isRelational(\"<\") &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.finishToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    getTokenFromCode(code: number): void {\n      if (this.state.inPropertyName) return super.getTokenFromCode(code);\n\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.exprAllowed &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (this.match(tt.braceL)) {\n        const curContext = this.curContext();\n        if (curContext === tc.j_oTag) {\n          this.state.context.push(tc.braceExpression);\n        } else if (curContext === tc.j_expr) {\n          this.state.context.push(tc.templateQuasi);\n        } else {\n          super.updateContext(prevType);\n        }\n        this.state.exprAllowed = true;\n      } else if (this.match(tt.slash) && prevType === tt.jsxTagStart) {\n        this.state.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.state.context.push(tc.j_cTag); // reconsider as closing tag context\n        this.state.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: string[] = [];\n\n  // enums (which are also in .types)\n  enums: string[] = [];\n\n  // const enums (which are also in .enums and .types)\n  constEnums: string[] = [];\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: string[] = [];\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: string[] = [];\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.push(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].types.indexOf(id.name) === -1 &&\n      this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\nexport const PARAM = 0b0000, // Initial Parameter flags\n  PARAM_YIELD = 0b0001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b0010, // track [Await] production parameter\n  PARAM_RETURN = 0b0100, // track [Return] production parameter\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind =\n  | typeof PARAM\n  | typeof PARAM_AWAIT\n  | typeof PARAM_IN\n  | typeof PARAM_RETURN\n  | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type { TokenType } from \"../../tokenizer/types\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tt } from \"../../tokenizer/types\";\nimport { types as ct } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport type { Pos, Position } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors } from \"../../parser/error\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | N.Accessibility;\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = Object.freeze({\n  AbstractMethodHasImplementation:\n    \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare:\n    \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'\",\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility:\n    \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements:\n    \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod:\n    \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer:\n    \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility:\n    \"Private elements cannot have an accessibility modifier ('%0')\",\n  ReadonlyForMethodSignature:\n    \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind:\n    \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\",\n});\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): boolean %checks {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return this.match(tt.name);\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.hash) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(allowedModifiers: T[]): ?T {\n      if (!this.match(tt.name)) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (\n        allowedModifiers.indexOf(modifier) !== -1 &&\n        this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))\n      ) {\n        return modifier;\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers(node, [\"public\"]);\n     *    this.tsParseModifiers(node, [\"abstract\", \"readonly\"]);\n     */\n    tsParseModifiers(\n      modified: {\n        [key: TsModifier]: ?true,\n        accessibility?: N.Accessibility,\n      },\n      allowedModifiers: TsModifier[],\n      disallowedModifiers?: TsModifier[],\n      errorTemplate?: string,\n    ): void {\n      for (;;) {\n        const startPos = this.state.start;\n        const modifier: ?TsModifier = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n          } else {\n            modified.accessibility = modifier;\n          }\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(\n            startPos,\n            // $FlowIgnore\n            errorTemplate,\n            modifier,\n          );\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.isRelational(\">\");\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n    ): ?(T[]) {\n      const result = [];\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expectRelational(\"<\");\n        }\n      }\n\n      const result = this.tsParseDelimitedList(kind, parseElement);\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expectRelational(\">\");\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        node.qualifier = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier();\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(): ?N.TsTypeParameterDeclaration {\n      if (this.isRelational(\"<\")) {\n        return this.tsParseTypeParameters();\n      }\n    }\n\n    tsParseTypeParameters() {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeParameters);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type === tt._const) {\n        this.next();\n        return this.tsParseTypeReference();\n      }\n      return null;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature.parameters = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      } else if (this.match(returnToken)) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(\n              pattern.start,\n              TSErrors.UnsupportedSignatureParameterKind,\n              pattern.type,\n            );\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma)) {\n        this.semicolon();\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      return this.eat(tt.name) && this.match(tt.colon);\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        if (readonly) {\n          this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers(\n        node,\n        [\"readonly\"],\n        [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\"],\n        TSErrors.InvalidModifierOnTypeMember,\n      );\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(\"readonly\");\n      }\n      if (this.isContextual(\"readonly\")) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(\"readonly\");\n      } else if (this.eatContextual(\"readonly\")) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements = null;\n      node.elementTypes.forEach(elementNode => {\n        let { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n        }\n\n        // Flow doesn't support ||=\n        seenOptionalElement =\n          seenOptionalElement ||\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          type = elementNode.type;\n        }\n\n        const isLabeled = type === \"TSNamedTupleMember\";\n        // Flow doesn't support ??=\n        labeledElements = labeledElements ?? isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(\n            elementNode.start,\n            TSErrors.MixedLabeledAndUnlabeledElements,\n          );\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode: N.TsNamedTupleMember = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = (type.typeName: N.Identifier);\n        } else {\n          this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n          // This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          // $FlowIgnore\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode: N.TsRestType = this.startNodeAt(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        // $FlowIgnore\n        node.abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsFillSignature(tt.arrow, node);\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = this.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.name:\n        case tt._void:\n        case tt._null: {\n          const type = this.match(tt._void)\n            ? \"TSVoidKeyword\"\n            : this.match(tt._null)\n            ? \"TSNullKeyword\"\n            : keywordTypeFromName(this.state.value);\n          if (\n            type !== undefined &&\n            this.lookaheadCharCode() !== charCodes.dot\n          ) {\n            const node: N.TsKeywordType = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n          return this.tsParseTypeReference();\n        }\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startPos = this.state.start;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startPos);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.backQuote:\n          return this.tsParseTemplateLiteralType();\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(\n      operator: \"keyof\" | \"unique\" | \"readonly\",\n    ): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      this.expectContextual(operator);\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(node.start, TSErrors.UnexpectedReadonly);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(\"infer\");\n      const typeParameter = this.startNode();\n      typeParameter.name = this.parseIdentifierName(typeParameter.start);\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw =>\n        this.isContextual(kw),\n      );\n      return operator\n        ? this.tsParseTypeOperator(operator)\n        : this.isContextual(\"infer\")\n        ? this.tsParseInferType()\n        : this.tsParseArrayTypeOrHigher();\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node: N.TsUnionType | N.TsIntersectionType = this.startNode();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.isRelational(\"<\")) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (this.match(tt.name) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.braceL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.braceR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      if (this.match(tt.bracketL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.bracketL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.bracketR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (\n        !this.match(tt.name) ||\n        this.state.value !== \"asserts\" ||\n        this.hasPrecedingLineBreak()\n      ) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!this.match(tt.name) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          this.state.lastTokStart,\n          Errors.InvalidEscapedReservedWord,\n          \"asserts\",\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n      if (this.hasPrecedingLineBreak() || !this.eat(tt._extends)) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n      node.extendsType = this.tsParseNonConditionalType();\n      this.expect(tt.question);\n      node.trueType = this.tsParseType();\n      this.expect(tt.colon);\n      node.falseType = this.tsParseType();\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return this.isContextual(\"abstract\") && this.lookahead().type === tt._new;\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expectRelational(\">\");\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      descriptor: string,\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStart = this.state.start;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        this.tsParseExpressionWithTypeArguments.bind(this),\n      );\n\n      if (!delimitedList.length) {\n        this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n      }\n\n      return delimitedList;\n    }\n\n    tsParseExpressionWithTypeArguments(): N.TsExpressionWithTypeArguments {\n      const node: N.TsExpressionWithTypeArguments = this.startNode();\n      // Note: TS uses parseLeftHandSideExpressionOrHigher,\n      // then has grammar errors later if it's not an EntityName.\n      node.expression = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n    ): N.TsInterfaceDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript interface declaration\",\n        BIND_TS_INTERFACE,\n      );\n      node.typeParameters = this.tsTryParseTypeParameters();\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n\n      node.typeParameters = this.tsTryParseTypeParameters();\n      node.typeAnnotation = this.tsInType(() => {\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(\"intrinsic\") &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node: N.TsKeywordType = this.startNode();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      isConst: boolean,\n    ): N.TsEnumDeclaration {\n      if (isConst) node.const = true;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript enum declaration\",\n        isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkLVal(\n          node.id,\n          \"module or namespace declaration\",\n          BIND_TS_NAMESPACE,\n        );\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(\"global\")) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(\"require\") &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(\"require\");\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(\"let\")) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      return this.tsInDeclareContext(() => {\n        switch (starttype) {\n          case tt._function:\n            nany.declare = true;\n            return this.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* declarationPosition */ true,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to now how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._const:\n            if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n              // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n              this.expect(tt._const);\n              this.expectContextual(\"enum\");\n              return this.tsParseEnumDeclaration(nany, /* isConst */ true);\n            }\n          // falls through\n          case tt._var:\n            kind = kind || this.state.value;\n            return this.parseVarStatement(nany, kind);\n          case tt.name: {\n            const value = this.state.value;\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, /* next */ true);\n            }\n          }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || this.match(tt.name))\n          ) {\n            return this.tsParseAbstractDeclaration(node);\n          }\n          break;\n\n        case \"enum\":\n          if (next || this.match(tt.name)) {\n            if (next) this.next();\n            return this.tsParseEnumDeclaration(node, /* isConst */ false);\n          }\n          break;\n\n        case \"interface\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseInterfaceDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (this.match(tt.name)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.isRelational(\"<\")) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expectRelational(\"<\");\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeArguments);\n      }\n      // This reads the next token after the `>` too, so do this in the enclosing context.\n      // But be sure not to parse a regex in the jsx expression `<C<number> />`, so set exprAllowed = false\n      this.state.exprAllowed = false;\n      this.expectRelational(\">\");\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      if (this.match(tt.name)) {\n        switch (this.state.value) {\n          case \"abstract\":\n          case \"declare\":\n          case \"enum\":\n          case \"interface\":\n          case \"module\":\n          case \"namespace\":\n          case \"type\":\n            return true;\n        }\n      }\n\n      return false;\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      if (allowModifiers !== undefined) {\n        accessibility = this.parseAccessModifier();\n        readonly = !!this.tsParseModifier([\"readonly\"]);\n        if (allowModifiers === false && (accessibility || readonly)) {\n          this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n        this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n        if (\n          // $FlowIgnore\n          node.declare\n        ) {\n          super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n          return;\n        }\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: $ReadOnlyArray<?N.Expression>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(\n            node.typeAnnotation.start,\n            TSErrors.UnexpectedTypeAnnotation,\n          );\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(...args): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(...args);\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        this.state.exprAllowed = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n\n          const typeArguments = this.tsParseTypeArguments();\n\n          if (typeArguments) {\n            if (!noCalls && this.eat(tt.parenL)) {\n              // possibleAsync always false here, because we would have handled it above.\n              // $FlowIgnore (won't be any undefined arguments)\n              node.arguments = this.parseCallExpressionArguments(\n                tt.parenR,\n                /* possibleAsync */ false,\n              );\n\n              // Handles invalid case: `f<T>(a:b)`\n              this.tsCheckForInvalidTypeCasts(node.arguments);\n\n              node.typeParameters = typeArguments;\n              if (state.optionalChainMember) {\n                // $FlowIgnore\n                node.optional = false;\n              }\n              return this.finishCallExpression(node, state.optionalChainMember);\n            } else if (this.match(tt.backQuote)) {\n              const result = this.parseTaggedTemplateExpression(\n                base,\n                startPos,\n                startLoc,\n                state,\n              );\n              result.typeParameters = typeArguments;\n              return result;\n            }\n          }\n\n          this.unexpected();\n        });\n\n        if (result) return result;\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // 99% certain this is `new C<T>();`. But may be `new C < T;`, which is also legal.\n        const typeParameters = this.tsTryParseAndCatch(() => {\n          const args = this.tsParseTypeArguments();\n          if (!this.match(tt.parenL)) this.unexpected();\n          return args;\n        });\n        if (typeParameters) {\n          node.typeParameters = typeParameters;\n        }\n      }\n\n      super.parseNewArguments(node);\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ) {\n      if (\n        nonNull(tt._in.binop) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(\"as\")\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string, // eslint-disable-line no-unused-vars\n      startLoc: number, // eslint-disable-line no-unused-vars\n      checkKeywords: boolean, // eslint-disable-line no-unused-vars\n      // eslint-disable-next-line no-unused-vars\n      isBinding: boolean,\n    ): void {\n      // Don't bother checking for TypeScript code.\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      node.importKind = \"value\";\n      if (this.match(tt.name) || this.match(tt.star) || this.match(tt.braceL)) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(\"type\") &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          !(ahead.type === tt.name && ahead.value === \"from\") &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (this.match(tt.name) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(\n          importNode.start,\n          \"A type-only import can specify a default import or named bindings, but not both.\",\n        );\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(\"type\") &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(\"as\")) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(\"namespace\");\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (this.isContextual(\"type\") && this.lookahead().type === tt.braceL) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(\"abstract\") && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        this.parseClass(cls, true, true);\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.state.value === \"interface\") {\n        const result = this.tsParseDeclaration(\n          this.startNode(),\n          this.state.value,\n          true,\n        );\n\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.state.type === tt._const) {\n        const ahead = this.lookahead();\n        if (ahead.type === tt.name && ahead.value === \"enum\") {\n          const node: N.TsEnumDeclaration = this.startNode();\n          this.expect(tt._const);\n          this.expectContextual(\"enum\");\n          return this.tsParseEnumDeclaration(node, /* isConst */ true);\n        }\n      }\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      this.tsParseModifiers(member, [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n      ]);\n\n      const callParseClassMember = () => {\n        super.parseClassMember(classBody, member, state);\n      };\n      if (member.declare) {\n        this.tsInDeclareContext(callParseClassMember);\n      } else {\n        callParseClassMember();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n        }\n        if (isStatic) {\n          this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n        }\n        if ((member: any).accessibility) {\n          this.raise(\n            member.start,\n            TSErrors.IndexSignatureHasAccessibility,\n            (member: any).accessibility,\n          );\n        }\n        if ((member: any).declare) {\n          this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member: any).abstract) {\n        this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!refNeedsArrowPos || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refNeedsArrowPos,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        // $FlowIgnore\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      // \"export declare\" is equivalent to just \"export\".\n      const isDeclare = this.eatContextual(\"declare\");\n\n      if (\n        isDeclare &&\n        (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(\n          this.state.start,\n          TSErrors.ExpectedAmbientAfterExportDeclare,\n        );\n      }\n\n      let declaration: ?N.Declaration;\n\n      if (this.match(tt.name)) {\n        declaration = this.tsTryParseExportDeclaration();\n      }\n      if (!declaration) {\n        declaration = super.parseExportDeclaration(node);\n      }\n      if (\n        declaration &&\n        (declaration.type === \"TSInterfaceDeclaration\" ||\n          declaration.type === \"TSTypeAliasDeclaration\" ||\n          isDeclare)\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (declaration && isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (this.state.isDeclareContext && this.match(tt.eq)) {\n        this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(\n          node.start,\n          TSErrors.PrivateElementHasAccessibility,\n          node.accessibility,\n        );\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.tsParseTypeArguments();\n      }\n      if (this.eatContextual(\"implements\")) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (decl.id.type === \"Identifier\" && this.eat(tt.bang)) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === ct.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === ct.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (!jsx?.error && !this.isRelational(\"<\")) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      let typeParameters: N.TsTypeParameterDeclaration;\n      state = state || this.state.clone();\n\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          (expr.extra && expr.extra.parenthesized)\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n        return expr;\n      }, state);\n\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isDeclareContext &&\n          !this.state.inType\n        ) {\n          this.raise(param.start, TSErrors.PatternIsOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return super.toAssignable(this.typeCastToParameter(node), isLHS);\n        case \"TSParameterProperty\":\n          return super.toAssignable(node, isLHS);\n        case \"ParenthesizedExpression\":\n          return this.toAssignableParenthesizedExpression(node, isLHS);\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean) {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      contextDescription: string,\n      ...args:\n        | [BindingTypes | void]\n        | [BindingTypes | void, ?Set<string>, boolean | void, boolean | void]\n    ): void {\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          // Allow \"typecasts\" to appear on the left of assignment expressions,\n          // because it may be in an arrow function.\n          // e.g. `const f = (foo: number = 0) => foo;`\n          return;\n        case \"TSParameterProperty\":\n          this.checkLVal(expr.parameter, \"parameter property\", ...args);\n          return;\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          this.checkLVal(expr.expression, contextDescription, ...args);\n          return;\n        default:\n          super.checkLVal(expr, contextDescription, ...args);\n          return;\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(this.state.start, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(\n          node.typeAnnotation.start,\n          TSErrors.TypeAnnotationAfterAssign,\n        );\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      if (this.match(tt.relational)) {\n        const code = this.input.charCodeAt(this.state.start);\n        if (code === charCodes.lessThan || code === charCodes.greaterThan) {\n          this.state.pos -= 1;\n          this.readToken_lt_gt(code);\n        }\n      }\n    }\n\n    toAssignableList(exprList: N.Expression[]): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (!expr) continue;\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            exprList[i] = this.typeCastToParameter(expr);\n            break;\n          case \"TSAsExpression\":\n          case \"TSTypeAssertion\":\n            if (!this.state.maybeInArrowParameters) {\n              exprList[i] = this.typeCastToParameter(expr);\n            } else {\n              this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n            }\n            break;\n        }\n      }\n      return super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    shouldParseArrow() {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArguments(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam =\n        firstParam &&\n        firstParam.type === \"Identifier\" &&\n        firstParam.name === \"this\";\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInDeclareContext<T>(cb: () => T): T {\n      const oldIsDeclareContext = this.state.isDeclareContext;\n      this.state.isDeclareContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isDeclareContext = oldIsDeclareContext;\n      }\n    }\n\n    parseClass<T: N.Class>(node: T, ...args: any[]): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node: any).abstract;\n      try {\n        return super.parseClass(node, ...args);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | typeof undefined {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.parseClass<N.ClassDeclaration>(\n          (node: N.ClassDeclaration),\n          /* isStatement */ true,\n          /* optionalId */ false,\n        );\n      } else if (this.isContextual(\"interface\")) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(\n            node.start,\n            TSErrors.NonClassMethodPropertyHasAbstractModifer,\n          );\n          this.next();\n          return this.tsParseInterfaceDeclaration(\n            (node: N.TsInterfaceDeclaration),\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod(...args: any[]) {\n      const method = super.parseMethod(...args);\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(\n            method.start,\n            TSErrors.AbstractMethodHasImplementation,\n            key.type === \"Identifier\"\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n          );\n        }\n      }\n      return method;\n    }\n  };\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\n\ntt.placeholder = new TokenType(\"%%\", { startsExpr: true });\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    checkLVal(expr: N.Expression): void {\n      if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n        return node;\n      }\n      return super.toAssignable(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    isLet(context: ?string): boolean {\n      if (super.isLet(context)) {\n        return true;\n      }\n\n      // Replicate the original checks that lead to looking ahead for an\n      // identifier.\n      if (!this.isContextual(\"let\")) {\n        return false;\n      }\n      if (context) return false;\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          this.unexpected(null, \"A class name is required\");\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tt.placeholder.label,\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(\"from\");\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n  };\n","import type Parser from \"../parser\";\nimport { types as tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStart = this.state.start;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.eat(tt.modulo);\n        if (this.match(tt.name)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStart);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","// @flow\n\nimport type Parser from \"./parser\";\n\nexport type Plugin = string | [string, Object];\n\nexport type PluginList = $ReadOnlyArray<Plugin>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\nexport function hasPlugin(plugins: PluginList, name: string): boolean {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (\n    hasPlugin(plugins, \"pipelineOperator\") &&\n    !PIPELINE_PROPOSALS.includes(\n      getPluginOption(plugins, \"pipelineOperator\", \"proposal\"),\n    )\n  ) {\n    throw new Error(\n      \"'pipelineOperator' requires 'proposal' option whose value should be one of: \" +\n        PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\n        \"Cannot combine importAssertions and moduleAttributes plugins.\",\n      );\n    }\n    const moduleAttributesVerionPluginOption = getPluginOption(\n      plugins,\n      \"moduleAttributes\",\n      \"version\",\n    );\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\n        \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n          \" representing the last proposal update. Currently, the\" +\n          \" only supported value is 'may-2020'.\",\n      );\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> = Object.keys(\n  mixinPlugins,\n);\n","// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Line from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { types as tt, type TokenType } from \"./types\";\nimport type { ParsingError } from \"../parser/error\";\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init(options: Options): void {\n    this.strict =\n      options.strictMode === false ? false : options.sourceType === \"module\";\n\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  errors: ParsingError[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inPipeline: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  inPropertyName: boolean = false;\n  hasFlowComment: boolean = false;\n  isIterator: boolean = false;\n  isDeclareContext: boolean = false;\n  inAbstractClass: boolean = false;\n\n  // For the smartPipelines plugin:\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F# plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store.\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  trailingComments: Array<N.Comment> = [];\n  leadingComments: Array<N.Comment> = [];\n  commentStack: Array<{\n    start: number,\n    leadingComments: ?Array<N.Comment>,\n    trailingComments: ?Array<N.Comment>,\n    type: string,\n  }> = [];\n  // $FlowIgnore this is initialized when the parser starts.\n  commentPreviousNode: N.Node = null;\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n  lineStart: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n  lastTokEnd: number = 0;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  context: Array<TokContext> = [ct.braceStatement];\n  exprAllowed: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, string> = new Map();\n\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  exportedIdentifiers: Array<string> = [];\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport { types as tt, keywords as keywordTypes, type TokenType } from \"./types\";\nimport { type TokContext, types as ct } from \"./context\";\nimport ParserErrors, { Errors } from \"../parser/error\";\nimport { SourceLocation } from \"../util/location\";\nimport {\n  lineBreak,\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ],\n  hex: [\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ],\n};\n\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [\n  // 0 - 1\n  charCodes.digit0,\n  charCodes.digit1,\n];\nallowedNumericSeparatorSiblings.oct = [\n  // 0 - 7\n  ...allowedNumericSeparatorSiblings.bin,\n\n  charCodes.digit2,\n  charCodes.digit3,\n  charCodes.digit4,\n  charCodes.digit5,\n  charCodes.digit6,\n  charCodes.digit7,\n];\nallowedNumericSeparatorSiblings.dec = [\n  // 0 - 9\n  ...allowedNumericSeparatorSiblings.oct,\n\n  charCodes.digit8,\n  charCodes.digit9,\n];\n\nallowedNumericSeparatorSiblings.hex = [\n  // 0 - 9, A - F, a - f,\n  ...allowedNumericSeparatorSiblings.dec,\n\n  charCodes.uppercaseA,\n  charCodes.uppercaseB,\n  charCodes.uppercaseC,\n  charCodes.uppercaseD,\n  charCodes.uppercaseE,\n  charCodes.uppercaseF,\n\n  charCodes.lowercaseA,\n  charCodes.lowercaseB,\n  charCodes.lowercaseC,\n  charCodes.lowercaseD,\n  charCodes.lowercaseE,\n  charCodes.lowercaseF,\n];\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends ParserErrors {\n  // Forward-declarations\n  // parser/util.js\n  /*::\n  +hasPrecedingLineBreak: () => boolean;\n  +unexpected: (pos?: ?number, messageOrType?: string | TokenType) => empty;\n  +expectPlugin: (name: string, pos?: ?number) => true;\n  */\n\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // TODO\n\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  // TODO\n\n  lookahead(): State {\n    const old = this.state;\n    this.state = old.clone(true);\n\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    // $FlowIgnore: The skipWhiteSpace ensures to match any string\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach((message, pos) =>\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(pos, message),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    const curContext = this.curContext();\n    if (!curContext?.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    const override = curContext?.override;\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(\n    block: boolean,\n    text: string,\n    start: number,\n    end: number,\n    startLoc: Position,\n    endLoc: Position,\n  ): void {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc),\n    };\n\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment(): void {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, Errors.UnterminatedComment);\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n    while (\n      (match = lineBreakG.exec(this.input)) &&\n      match.index < this.state.pos\n    ) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      true,\n      this.input.slice(start + 2, end),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  skipLineComment(startSkip: number): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      false,\n      this.input.slice(start + startSkip, this.state.pos),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk:\n              this.skipBlockComment();\n              break;\n\n            case charCodes.slash:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n      }\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(this.state.pos, Errors.UnexpectedDigitAfterHash);\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          this.state.pos,\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n        );\n      }\n\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n      this.state.pos += 2;\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    // '/'\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    // Exponentiation operator **\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    if (next === charCodes.equalsTo && !exprAllowed) {\n      width++;\n      type = tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    // '^'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (\n        next === charCodes.dash &&\n        !this.inModule &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan &&\n        (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())\n      ) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code: number): void {\n    // '<>'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size =\n        code === charCodes.greaterThan &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan\n          ? 3\n          : 2;\n      if (this.input.charCodeAt(this.state.pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShift, size);\n      return;\n    }\n\n    if (\n      next === charCodes.exclamationMark &&\n      code === charCodes.lessThan &&\n      !this.inModule &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dash &&\n      this.input.charCodeAt(this.state.pos + 3) === charCodes.dash\n    ) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      size = 2;\n    }\n\n    this.finishOp(tt.relational, size);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // [|\n          this.finishToken(tt.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // {|\n          this.finishToken(tt.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        ++this.state.pos;\n        this.finishToken(tt.backQuote);\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n      case charCodes.greaterThan:\n        this.readToken_lt_gt(code);\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        ++this.state.pos;\n        this.finishToken(tt.at);\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n    }\n\n    throw this.raise(\n      this.state.pos,\n      Errors.InvalidOrUnexpectedToken,\n      String.fromCodePoint(code),\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const start = this.state.pos;\n    let escaped, inClass;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      const ch = this.input.charAt(this.state.pos);\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n        escaped = ch === \"\\\\\";\n      }\n      ++this.state.pos;\n    }\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, Errors.DuplicateRegExpFlags);\n        }\n      } else if (\n        isIdentifierChar(charCode) ||\n        charCode === charCodes.backslash\n      ) {\n        this.raise(this.state.pos + 1, Errors.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings =\n      radix === 16\n        ? allowedNumericSeparatorSiblings.hex\n        : radix === 10\n        ? allowedNumericSeparatorSiblings.dec\n        : radix === 8\n        ? allowedNumericSeparatorSiblings.oct\n        : allowedNumericSeparatorSiblings.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === charCodes.underscore) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        } else if (\n          forbiddenSiblings.indexOf(prev) > -1 ||\n          forbiddenSiblings.indexOf(next) > -1 ||\n          Number.isNaN(next)\n        ) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, Errors.NumericSeparatorInEscapeSequence);\n        }\n\n        // Ignore this _ character\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, Errors.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const start = this.state.pos;\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(this.state.start + 2, Errors.InvalidDigit, radix);\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(start, Errors.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, Errors.InvalidNumber);\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, Errors.StrictOctalLiteral);\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, Errors.ZeroDigitNumericSeparator);\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(start, Errors.InvalidOrMissingExponent);\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, Errors.InvalidBigIntLiteral);\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, Errors.InvalidDecimal);\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, Errors.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads template string tokens.\n\n  readTmplToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedTemplate);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (\n        ch === charCodes.graveAccent ||\n        (ch === charCodes.dollarSign &&\n          this.input.charCodeAt(this.state.pos + 1) ===\n            charCodes.leftCurlyBrace)\n      ) {\n        if (this.state.pos === this.state.start && this.match(tt.template)) {\n          if (ch === charCodes.dollarSign) {\n            this.state.pos += 2;\n            this.finishToken(tt.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(tt.backQuote);\n            return;\n          }\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.template, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos: number, message: string) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  // Used to read escaped characters\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(\n            this.state.pos - 1,\n            Errors.StrictNumericEscape,\n          );\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          const codePos = this.state.pos - 1;\n          const match = this.input\n            .substr(this.state.pos - 1, 3)\n            .match(/^[0-7]+/);\n\n          // This is never null, because of the if condition above.\n          /*:: invariant(match !== null) */\n          let octalStr = match[0];\n\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, Errors.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, Errors.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  readWord1(): string {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === charCodes.atSign) {\n        ++this.state.pos;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(this.state.pos, Errors.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, Errors.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word: string): boolean {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(): void {\n    const word = this.readWord1();\n    const type = keywordTypes.get(word) || tt.name;\n\n    // Allow @@iterator and @@asyncIterator as a identifier only inside type\n    if (\n      this.state.isIterator &&\n      (!this.isIterator(word) || !this.state.inType)\n    ) {\n      this.raise(this.state.pos, Errors.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes(): void {\n    const kw = this.state.type.keyword;\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, Errors.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType: TokenType): boolean {\n    const parent = this.curContext();\n    if (parent === ct.functionExpression || parent === ct.functionStatement) {\n      return true;\n    }\n    if (\n      prevType === tt.colon &&\n      (parent === ct.braceStatement || parent === ct.braceExpression)\n    ) {\n      return !parent.isExpr;\n    }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (\n      prevType === tt._return ||\n      (prevType === tt.name && this.state.exprAllowed)\n    ) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (\n      prevType === tt._else ||\n      prevType === tt.semi ||\n      prevType === tt.eof ||\n      prevType === tt.parenR ||\n      prevType === tt.arrow\n    ) {\n      return true;\n    }\n\n    if (prevType === tt.braceL) {\n      return parent === ct.braceStatement;\n    }\n\n    if (\n      prevType === tt._var ||\n      prevType === tt._const ||\n      prevType === tt.name\n    ) {\n      return false;\n    }\n\n    if (prevType === tt.relational) {\n      // `class C<T> { ... }`\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType: TokenType): void {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === tt.dot || prevType === tt.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if ((update = type.updateContext)) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n}\n","// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Errors } from \"../parser/error\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, number> = new Map();\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\nexport default class ClassScopeHandler {\n  stack: Array<ClassScope> = [];\n  declare raise: raiseFunction;\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    pos: number,\n  ) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, Errors.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, pos: number) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      // top-level\n      this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n    }\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser/error-message) will be recorded in\nsome expression scopes and thrown later when we know what the ambigous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\ntype raiseFunction = (number, string, ...any) => void;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  errors: Map</* pos */ number, /* message */ string> = new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(pos: number, message: string) {\n    this.errors.set(pos, message);\n  }\n  clearDeclarationError(pos: number) {\n    this.errors.delete(pos);\n  }\n  iterateErrors(iterator: (message: string, pos: number) => void) {\n    this.errors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n  declare raise: raiseFunction;\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {string} message Error message\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(pos: number, message: string): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, message);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    this.raise(pos, message);\n  }\n\n  /**\n   * Record parenthesized identifier errors\n   *\n   * A parenthesized identifier in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {number} pos\n   * @param {string} message\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordParenthesizedIdentifierError(pos: number, message: string): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {string} message\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError(pos: number, message: string): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, message);\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    /*:: invariant(currentScope instanceof ArrowHeadParsingScope) */\n    currentScope.iterateErrors((message, pos) => {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(pos, message);\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n","// @flow\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport { Errors } from \"./error\";\n/*::\nimport type ScopeHandler from \"../util/scope\";\n*/\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  /*::\n  +getScopeHandler: () => Class<ScopeHandler<*>>;\n  */\n\n  // TODO\n\n  addExtra(node: Node, key: string, val: any): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    extra[key] = val;\n  }\n\n  // TODO\n\n  isRelational(op: \"<\" | \">\"): boolean {\n    return this.match(tt.relational) && this.state.value === op;\n  }\n\n  // TODO\n\n  expectRelational(op: \"<\" | \">\"): void {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, tt.relational);\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(name: string): boolean {\n    return (\n      this.match(tt.name) &&\n      this.state.value === name &&\n      !this.state.containsEsc\n    );\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    return (\n      this.input.slice(nameStart, nameEnd) === name &&\n      (nameEnd === this.input.length ||\n        !isIdentifierChar(this.input.charCodeAt(nameEnd)))\n    );\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(name: string): boolean {\n    return this.isContextual(name) && this.eat(tt.name);\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(name: string, message?: string): void {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEnd, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.end, this.nextTokenStart()),\n    );\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(this.state.lastTokEnd, Errors.MissingSemicolon);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, pos?: ?number): void {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  // Throws if the current token and the prev one are separated by a space.\n  assertNoSpace(message: string = \"Unexpected space.\"): void {\n    if (this.state.start > this.state.lastTokEnd) {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(this.state.lastTokEnd, message);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    }\n  }\n\n  // Raise an unexpected token error. Can take the expected token type\n  // instead of a message string.\n\n  unexpected(\n    pos: ?number,\n    messageOrType: string | TokenType = \"Unexpected token\",\n  ): empty {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n    /* eslint-enable @babel/development-internal/dry-error-messages */\n  }\n\n  expectPlugin(name: string, pos?: ?number): true {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: [name] },\n        `This experimental syntax requires enabling the parser plugin: '${name}'`,\n      );\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names: Array<string>, pos?: ?number): void {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: names },\n        `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\n          \", \",\n        )}'`,\n      );\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, SyntaxError, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: SyntaxError),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const { shorthandAssign, doubleProto } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, Errors.DuplicateProto);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return (\n      this.match(tt.name) ||\n      !!this.state.type.keyword ||\n      this.match(tt.string) ||\n      this.match(tt.num) ||\n      this.match(tt.bigint) ||\n      this.match(tt.decimal)\n    );\n  }\n\n  /*\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /*\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/proposal-class-fields/#sec-private-names-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /*\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isOptionalChain(node: Node): boolean {\n    return (\n      node.type === \"OptionalMemberExpression\" ||\n      node.type === \"OptionalCallExpression\"\n    );\n  }\n\n  isObjectProperty(node: Node): boolean {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track\n * - **shorthandAssign**: track initializer `=` position when parsing ambiguous\n *   patterns. When we are sure the parsed pattern is a RHS, which means it is\n *   not a pattern, we will throw on this position on invalid assign syntax,\n *   otherwise it will be reset to -1\n * - **doubleProto**: track the duplicate `__proto__` key position when parsing\n *   ambiguous object patterns. When we are sure the parsed pattern is a RHS,\n *   which means it is an object literal, we will throw on this position for\n *   __proto__ redefinition, otherwise it will be reset to -1\n */\nexport class ExpressionErrors {\n  shorthandAssign = -1;\n  doubleProto = -1;\n}\n","// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n  range: [number, number];\n  leadingComments: Array<Comment>;\n  trailingComments: Array<Comment>;\n  innerComments: Array<Comment>;\n  extra: { [key: string]: any };\n\n  __clone(): this {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // $FlowIgnore\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(\n      node,\n      type,\n      this.state.lastTokEnd,\n      this.state.lastTokEndLoc,\n    );\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(\n    node: T,\n    type: string,\n    pos: number,\n    loc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    end?: number = this.state.lastTokEnd,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\nimport * as charCodes from \"charcodes\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: Identifier, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors } from \"./error\";\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssignAllowIn: (\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObjectLike: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method in flow.js.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression. If isLHS is `true`, the following cases are allowed:\n                                    `[(a)] = [0]`, `[(a.b)] = [0]`\n\n   * @returns {Node} The converted assignable pattern\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): Node {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordParenthesizedIdentifierError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(\n            node.start,\n            Errors.InvalidParenthesizedAssignment,\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingComma\n          ) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\": {\n        this.checkToRestConversion(node);\n\n        node.type = \"RestElement\";\n        const arg = node.argument;\n        this.toAssignable(arg, isLHS);\n        break;\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, node.extra?.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, Errors.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      const error =\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod;\n\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(prop.key.start, error);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaPos?: ?number,\n    isLHS: boolean,\n  ): $ReadOnlyArray<Pattern> {\n    let end = exprList.length;\n    if (end) {\n      const last = exprList[end - 1];\n      if (last?.type === \"RestElement\") {\n        --end;\n      } else if (last?.type === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n        if (\n          arg.type !== \"Identifier\" &&\n          arg.type !== \"MemberExpression\" &&\n          arg.type !== \"ArrayPattern\" &&\n          arg.type !== \"ObjectPattern\"\n        ) {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n    return exprList;\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, Errors.UnsupportedParameterDecorator);\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    // $FlowIgnore\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  /**\n   * Verify that if a node is an lval - something that can be assigned to.\n   *\n   * @param {Expression} expr The given node\n   * @param {string} contextDescription The auxiliary context information printed when error is thrown\n   * @param {BindingTypes} [bindingType=BIND_NONE] The desired binding type. If the given node is an identifier and `bindingType` is not\n                                                   BIND_NONE, `checkLVal` will register binding to the parser scope\n                                                   See also src/util/scopeflags.js\n   * @param {?Set<string>} checkClashes An optional string set to check if an identifier name is included. `checkLVal` will add checked\n                                        identifier name to `checkClashes` It is used in tracking duplicates in function parameter lists. If\n                                        it is nullish, `checkLVal` will skip duplicate checks\n   * @param {boolean} [disallowLetBinding] Whether an identifier named \"let\" should be disallowed\n   * @param {boolean} [strictModeChanged=false] Whether an identifier has been parsed in a sloppy context but should be reinterpreted as\n                                                strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @memberof LValParser\n   */\n  checkLVal(\n    expr: Expression,\n    contextDescription: string,\n    bindingType: BindingTypes = BIND_NONE,\n    checkClashes: ?Set<string>,\n    disallowLetBinding?: boolean,\n    strictModeChanged?: boolean = false,\n  ): void {\n    switch (expr.type) {\n      case \"Identifier\": {\n        const { name } = expr;\n        if (\n          this.state.strict &&\n          // \"Global\" reserved words have already been checked by parseIdentifier,\n          // unless they have been found in the id or parameters of a strict-mode\n          // function in a sloppy context.\n          (strictModeChanged\n            ? isStrictBindReservedWord(name, this.inModule)\n            : isStrictBindOnlyReservedWord(name))\n        ) {\n          this.raise(\n            expr.start,\n            bindingType === BIND_NONE\n              ? Errors.StrictEvalArguments\n              : Errors.StrictEvalArgumentsBinding,\n            name,\n          );\n        }\n\n        if (checkClashes) {\n          if (checkClashes.has(name)) {\n            this.raise(expr.start, Errors.ParamDupe);\n          } else {\n            checkClashes.add(name);\n          }\n        }\n        if (disallowLetBinding && name === \"let\") {\n          this.raise(expr.start, Errors.LetInLexicalBinding);\n        }\n        if (!(bindingType & BIND_NONE)) {\n          this.scope.declareName(name, bindingType, expr.start);\n        }\n        break;\n      }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, Errors.InvalidPropertyBindingPattern);\n        }\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;\n          // If we find here an ObjectMethod, it's because this was originally\n          // an ObjectExpression which has then been converted.\n          // toAssignable already reported this error with a nicer message.\n          else if (this.isObjectMethod(prop)) continue;\n\n          this.checkLVal(\n            prop,\n            \"object destructuring pattern\",\n            bindingType,\n            checkClashes,\n            disallowLetBinding,\n          );\n        }\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(\n              elem,\n              \"array destructuring pattern\",\n              bindingType,\n              checkClashes,\n              disallowLetBinding,\n            );\n          }\n        }\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(\n          expr.left,\n          \"assignment pattern\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(\n          expr.argument,\n          \"rest element\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(\n          expr.expression,\n          \"parenthesized expression\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      default: {\n        this.raise(\n          expr.start,\n          bindingType === BIND_NONE\n            ? Errors.InvalidLhs\n            : Errors.InvalidLhsBinding,\n          contextDescription,\n        );\n      }\n    }\n  }\n\n  checkToRestConversion(node: SpreadElement): void {\n    if (\n      node.argument.type !== \"Identifier\" &&\n      node.argument.type !== \"MemberExpression\"\n    ) {\n      this.raise(node.argument.start, Errors.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): void {\n    if (this.match(tt.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos: number) {\n    throw this.raise(pos, Errors.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos: number) {\n    this.raise(pos, Errors.RestTrailingComma);\n  }\n}\n","// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport { types as ct } from \"../tokenizer/context\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n} from \"../util/identifier\";\nimport type { Pos, Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  PARAM,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors } from \"./error\";\n\n/*::\nimport type { SourceType } from \"../options\";\n*/\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  +parseBlockOrModuleBlockBody: (\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void\n  ) => void\n  +parseProgram: (\n    program: N.Program, end: TokenType, sourceType?: SourceType\n  ) => N.Program\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // $FlowIgnore\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, Errors.RecordNoProto);\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, Errors.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression & N.ParserOutput {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(refExpressionErrors?: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      ),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      ),\n    );\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        // If we have [Yield] production, `yield` will start a YieldExpression thus\n        // regex is allowed following. Otherwise `yield` is an identifier and regex\n        // is disallowed in tt.name.updateContext\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(tt.parenL) || this.match(tt.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(\n      refExpressionErrors,\n      refNeedsArrowPos,\n    );\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        node.left = this.toAssignable(left, /* isLHS */ true);\n        refExpressionErrors.doubleProto = -1; // reset because double __proto__ is valid in assignment expression\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    refExpressionErrors: ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // FIXME: Disabling this for now since can't seem to get it to play nicely\n    // eslint-disable-next-line no-unused-vars\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    let prec = this.state.type.binop;\n    if (prec != null && (this.prodParam.hasIn || !this.match(tt._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = ((tt.logicalAND: any): { binop: number }).binop;\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\"\n        ) {\n          if (\n            this.match(tt.name) &&\n            this.state.value === \"await\" &&\n            this.prodParam.hasAwait\n          ) {\n            throw this.raise(\n              this.state.start,\n              Errors.UnexpectedAwaitAfterPipelineBody,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(this.state.start, Errors.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n      // falls through\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      op.rightAssociative ? prec - 1 : prec,\n    );\n  }\n\n  checkExponentialAfterUnary(node: N.AwaitExpression | N.UnaryExpression) {\n    if (this.match(tt.exponent)) {\n      this.raise(\n        node.argument.start,\n        Errors.UnexpectedTokenUnaryExponentiation,\n      );\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    refExpressionErrors: ?ExpressionErrors,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    if (\n      this.isContextual(\"module\") &&\n      this.lookaheadCharCode() === charCodes.leftCurlyBrace &&\n      !this.hasFollowingLineBreak()\n    ) {\n      return this.parseModuleExpression();\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode();\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, Errors.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, Errors.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? this.state.type.startsExpr\n        : this.state.type.startsExpr && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(\n          startPos,\n          this.hasPlugin(\"topLevelAwait\")\n            ? Errors.AwaitNotInAsyncContext\n            : Errors.AwaitNotInAsyncFunction,\n        );\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.Expression {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    if (!noCalls && this.eat(tt.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(tt.backQuote)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n    if (this.match(tt.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else if (optional || this.match(tt.bracketL) || this.eat(tt.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(tt.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed\n      ? this.parseExpression()\n      : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, Errors.SuperPrivateField);\n      }\n      this.classScope.usePrivateName(\n        this.getPrivateNameSV(property),\n        property.start,\n      );\n    }\n    node.property = property;\n\n    if (computed) {\n      this.expect(tt.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n\n    this.next(); // eat `(`\n\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        state.maybeAsyncArrow,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        node,\n      );\n    }\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt(startPos, startLoc),\n        node,\n      );\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return node;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(startPos, Errors.OptionalChainingNoTemplate);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEnd === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        // todo(Babel 8): remove the if condition,\n        // moduleAttributes is renamed to importAssertions\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(\n          node.start,\n          Errors.ImportCallArity,\n          this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n            ? \"one or two arguments\"\n            : \"one argument\",\n        );\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, Errors.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    possibleAsyncArrow: boolean,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.ImportCallArgumentTrailingComma,\n            );\n          }\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(\n          false,\n          possibleAsyncArrow ? new ExpressionErrors() : undefined,\n          possibleAsyncArrow ? { start: 0 } : undefined,\n          allowPlaceholder,\n        ),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingComma,\n    );\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.state.type === tt.slash) this.readRegexp();\n\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(this.state.lastTokStart, Errors.UnsupportedImport);\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt.name: {\n        const containsEsc = this.state.containsEsc;\n        const id = this.parseIdentifier();\n\n        if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n          if (this.match(tt._function)) {\n            const last = this.state.context.length - 1;\n            if (this.state.context[last] !== ct.functionStatement) {\n              // Since \"async\" is an identifier and normally identifiers\n              // can't be followed by expression, the tokenizer assumes\n              // that \"function\" starts a statement.\n              // Fixing it in the tokenizer would mean tracking not only the\n              // previous token (\"async\"), but also the one before to know\n              // its beforeExpr value.\n              // It's easier and more efficient to adjust the context here.\n              throw new Error(\"Internal error\");\n            }\n            this.state.context[last] = ct.functionExpression;\n\n            this.next();\n            return this.parseFunction(\n              this.startNodeAtNode(id),\n              undefined,\n              true,\n            );\n          } else if (this.match(tt.name)) {\n            return this.parseAsyncArrowUnaryFunction(id);\n          }\n        }\n\n        if (canBeArrow && this.match(tt.arrow) && !this.canInsertSemicolon()) {\n          this.next();\n          return this.parseArrowExpression(\n            this.startNodeAtNode(id),\n            [id],\n            false,\n          );\n        }\n\n        return id;\n      }\n\n      case tt._do: {\n        return this.parseDo();\n      }\n\n      case tt.regexp: {\n        const value = this.state.value;\n        node = this.parseLiteral(value.value, \"RegExpLiteral\");\n        node.pattern = value.pattern;\n        node.flags = value.flags;\n        return node;\n      }\n\n      case tt.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case tt.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case tt.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case tt.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case tt._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case tt._true:\n      case tt._false:\n        return this.parseBooleanLiteral();\n\n      case tt.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.backQuote:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(callee.start, Errors.UnsupportedBind);\n        }\n      }\n\n      case tt.hash: {\n        if (this.state.inPipeline) {\n          node = this.startNode();\n\n          if (\n            this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\"\n          ) {\n            this.raise(node.start, Errors.PrimaryTopicRequiresSmartPipeline);\n          }\n\n          this.next();\n\n          if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n            this.raise(node.start, Errors.PrimaryTopicNotAllowed);\n          }\n\n          this.registerTopicReference();\n          return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n        }\n\n        // https://tc39.es/proposal-private-fields-in-in\n        // RelationalExpression [In, Yield, Await]\n        //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n        const nextCh = this.input.codePointAt(this.state.end);\n        if (isIdentifierStart(nextCh) || nextCh === charCodes.backslash) {\n          const start = this.state.start;\n          // $FlowIgnore It'll either parse a PrivateName or throw.\n          node = (this.parseMaybePrivateName(true): N.PrivateName);\n          if (this.match(tt._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(\n              this.getPrivateNameSV(node),\n              node.start,\n            );\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(\n              this.state.start,\n              Errors.PrivateInExpectedIn,\n              this.getPrivateNameSV(node),\n            );\n          } else {\n            throw this.unexpected(start);\n          }\n          return node;\n        }\n      }\n      // fall through\n      case tt.relational: {\n        if (this.state.value === \"<\") {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n          if (\n            isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n            lookaheadCh === charCodes.greaterThan // Fragment <>\n          ) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          }\n        }\n      }\n      // fall through\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(id: N.Expression): N.ArrowFunctionExpression {\n    const node = this.startNodeAtNode(id);\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, Errors.LineTerminatorBeforeArrow);\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  parseDo(): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.SuperNotAllowed);\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.UnexpectedSuper);\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(node.start, Errors.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral(): N.BooleanLiteral {\n    const node = this.startNode();\n    node.value = this.match(tt._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(\n    isPrivateNameAllowed: boolean,\n  ): N.PrivateName | N.Identifier {\n    const isPrivate = this.match(tt.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, Errors.UnexpectedPrivateField);\n      }\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(\n        node.property.start,\n        Errors.UnsupportedMetaProperty,\n        meta.name,\n        propertyName,\n      );\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next(); // eat `.`\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(\n          id.start,\n          { code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\" },\n          Errors.ImportMetaOutsideModule,\n        );\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral<T: N.Literal>(\n    value: any,\n    type: /*T[\"kind\"]*/ string,\n    startPos?: number,\n    startLoc?: Position,\n  ): T {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = { start: 0 };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma, refNeedsArrowPos.start || null);\n        if (this.match(tt.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        this.checkCommaAfterRest(charCodes.rightParenthesis);\n\n        break;\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n            refNeedsArrowPos,\n          ),\n        );\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow() &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = Errors.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(metaProp.start, error);\n        /* eslint-enable @babel/development-internal/dry-error-messages */\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(node: N.Expression): N.NewExpression {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, Errors.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, Errors.OptionalChainingNoNew);\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(this.state.start, Errors.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node: N.NewExpression): void {\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const elem = this.startNode();\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, Errors.InvalidEscapeSequenceTemplate);\n      }\n    }\n    elem.value = {\n      raw: this.input\n        .slice(this.state.start, this.state.end)\n        .replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value,\n    };\n    this.next();\n    elem.tail = this.match(tt.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      this.expect(tt.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(tt.braceR);\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n      if (!isPattern) {\n        // $FlowIgnore RestElement will never be returned if !isPattern\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(prop.start, Errors.InvalidRecordProperty);\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    // The tokenizer uses `braceIsBlock` to detect whether `{` starts a block statement.\n    // If `{` is a block statement, `exprAllowed` will be `true`.\n    // However the tokenizer can not handle edge cases like `0 ? a : { a : 1 } / 2`, here\n    // we update `exprAllowed` when an object-like is parsed.\n    this.state.exprAllowed = false;\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    isPattern: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement | N.RestElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, Errors.UnsupportedPropertyDecorator);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      if (isPattern) {\n        this.next();\n        // Don't use parseRestBinding() as we only allow Identifier here.\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(tt.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n\n    if (\n      !isPattern &&\n      !isGenerator &&\n      !containsEsc &&\n      this.maybeAsyncOrAccessorProp(prop)\n    ) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, Errors.AccessorIsGenerator, keyName);\n          this.next();\n        }\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      isPattern,\n      isAccessor,\n      refExpressionErrors,\n    );\n\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, Errors.BadGetterArity);\n      } else {\n        this.raise(start, Errors.BadSetterArity);\n      }\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(start, Errors.BadSetterRestParameter);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): ?N.ObjectMethod {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoveredInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else if (this.match(tt.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else {\n        prop.value = prop.key.__clone();\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n    isPrivateNameAllowed: boolean,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      // We check if it's valid for it to be a private name when we push it.\n      (prop: $FlowFixMe).key =\n        this.match(tt.num) ||\n        this.match(tt.string) ||\n        this.match(tt.bigint) ||\n        this.match(tt.decimal)\n          ? this.parseExprAtom()\n          : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return node;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaPos: ?number,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody and AsyncConciseBody inherit [In]\n    if (!this.match(tt.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaPos: ?number,\n  ): void {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            const errorPos =\n              // $FlowIgnore\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n              // $FlowIgnore\n              !!node.key\n                ? node.key.end\n                : node.start;\n            this.raise(errorPos, Errors.IllegalLanguageModeDirective);\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkLVal(\n              node.id,\n              \"function name\",\n              BIND_OUTSIDE,\n              undefined,\n              undefined,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    const checkClashes = new Set();\n    for (const param of node.params) {\n      this.checkLVal(\n        param,\n        \"function parameter list\",\n        BIND_VAR,\n        allowDuplicates ? null : checkClashes,\n        undefined,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    refNeedsArrowPos: ?Pos,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, Errors.UnexpectedToken, \",\");\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors, refNeedsArrowPos),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, Errors.UnexpectedArgumentPlaceholder);\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n        refNeedsArrowPos,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { start, type } = this.state;\n\n    if (type === tt.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n\n      // `class` and `function` keywords push function-type token context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed\n      // as an identifier such as a property name.\n      const curContext = this.curContext();\n      if (\n        (type === tt._class || type === tt._function) &&\n        (curContext === ct.functionStatement ||\n          curContext === ct.functionExpression)\n      ) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      this.state.type = tt.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: number,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, Errors.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(\n          startLoc,\n          Errors.AwaitBindingIdentifier,\n        );\n      }\n    }\n\n    if (\n      this.scope.inClass &&\n      !this.scope.inNonArrowFunction &&\n      word === \"arguments\"\n    ) {\n      this.raise(startLoc, Errors.ArgumentsInClass);\n      return;\n    }\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, Errors.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, Errors.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(startPos: number, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.AwaitExpressionFormalParameter,\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(node.start, Errors.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    return (\n      this.hasPrecedingLineBreak() ||\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n      this.match(tt.plusMin) ||\n      this.match(tt.parenL) ||\n      this.match(tt.bracketL) ||\n      this.match(tt.backQuote) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      this.match(tt.regexp) ||\n      this.match(tt.slash) ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && this.match(tt.modulo))\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(): N.YieldExpression {\n    const node = this.startNode();\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.YieldInParameter,\n    );\n\n    this.next();\n    if (\n      this.match(tt.semi) ||\n      (!this.match(tt.star) && !this.state.type.startsExpr) ||\n      this.hasPrecedingLineBreak()\n    ) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(tt.star);\n      node.argument = this.parseMaybeAssign();\n    }\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartPos: number) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(leftStartPos, Errors.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n\n    return this.parseSmartPipelineBodyInStyle(\n      childExpression,\n      startPos,\n      startLoc,\n    );\n  }\n\n  checkSmartPipelineBodyEarlyErrors(\n    childExpression: N.Expression,\n    startPos: number,\n  ): void {\n    if (this.match(tt.arrow)) {\n      // If the following token is invalidly `=>`, then throw a human-friendly error\n      // instead of something like 'Unexpected token, expected \";\"'.\n      throw this.raise(this.state.start, Errors.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, Errors.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, Errors.PipelineTopicUnused);\n      }\n      bodyNode.expression = childExpression;\n    }\n    return this.finishNode(\n      bodyNode,\n      isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\",\n    );\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // Enable topic references from outer contexts within smart pipeline bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicPermittingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // Disable topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicForbiddingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Disable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 0,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a primary topic reference (`#`) within the current\n  // topic context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    this.eat(tt.braceL);\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    const program = this.startNode<N.Program>();\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    this.eat(tt.braceR);\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n}\n","// @flow\n\nimport * as N from \"../types\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"./error\";\nimport {\n  isIdentifierChar,\n  isIdentifierStart,\n  keywordRelationalOperator,\n} from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) file.tokens = this.tokens;\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    program: N.Program,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        // $FlowIssue\n        this.raise(pos, Errors.ModuleExportUndefined, name);\n      }\n    }\n    return this.finishNode<N.Program>(program, \"Program\");\n  }\n\n  // TODO\n\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const expr = stmt.expression;\n\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n\n    directive.value = this.finishNodeAt(\n      directiveLiteral,\n      \"DirectiveLiteral\",\n      expr.end,\n      expr.loc.end,\n    );\n\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === charCodes.leftSquareBracket) return true;\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n      case tt._continue:\n        // $FlowFixMe\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, Errors.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, Errors.SloppyFunction);\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, Errors.UnexpectedLexicalDeclaration);\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(this.state.start, Errors.UnexpectedImportExport);\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(\n              this.state.start,\n              Errors.AsyncFunctionInSingleStatementContext,\n            );\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      starttype === tt.name &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(\n        node.start,\n        {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n        },\n        Errors.ImportOutsideModule,\n      );\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, Errors.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.eat(tt.parenL)) {\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ): N.BreakStatement | N.ContinueStatement {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ) {\n    const isBreak = keyword === \"break\";\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      this.raise(node.start, Errors.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = -1;\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(\"of\")) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    if (this.match(tt._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init, /* isLHS */ true);\n      const description = this.isContextual(\"of\")\n        ? \"for-of statement\"\n        : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, Errors.IllegalReturn);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.MultipleDefaultsInSwitch,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, Errors.NewlineAfterThrow);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n\n    return param;\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n      this.scope.exit();\n\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, Errors.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(this.state.start, Errors.StrictWith);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, Errors.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: number,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(\n        init.start,\n        Errors.ForInOfLoopInitializer,\n        isForIn ? \"for-in\" : \"for-of\",\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, Errors.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(tt.eq)) {\n        decl.init = isFor\n          ? this.parseMaybeAssignDisallowIn()\n          : this.parseMaybeAssignAllowIn();\n      } else {\n        if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(\"of\"))\n        ) {\n          // `const` with no initializer is allowed in TypeScript.\n          // It could be a declaration like `const x: number;`.\n          if (!isTypescript) {\n            this.raise(\n              this.state.lastTokEnd,\n              Errors.DeclarationMissingInitializer,\n              \"Const declarations\",\n            );\n          }\n        } else if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(\"of\")))\n        ) {\n          this.raise(\n            this.state.lastTokEnd,\n            Errors.DeclarationMissingInitializer,\n            \"Complex binding patterns\",\n          );\n        }\n        decl.init = null;\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(\n      decl.id,\n      \"variable declaration\",\n      kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n      undefined,\n      kind !== \"var\",\n    );\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(this.state.start, Errors.GeneratorInSingleStatementContext);\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || this.match(tt.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    constructorAllowsSuper: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      constructorAllowsSuper,\n      hadConstructor: false,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, Errors.DecoratorSemicolon);\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(member.start, Errors.DecoratorConstructor);\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, Errors.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassMethod> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateMethod> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, Errors.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    // Check the key is not a computed expression or string literal.\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, Errors.DuplicateConstructor);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isSimple &&\n      key.name === \"async\" &&\n      !containsEsc &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isSimple &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !containsEsc &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAccessor);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-ClassElementName\n  parseClassElementName(member: N.ClassMember): N.Expression | N.Identifier {\n    const key = this.parsePropertyName(member, /* isPrivateNameAllowed */ true);\n\n    if (\n      !member.computed &&\n      member.static &&\n      ((key: $FlowSubtype<N.Identifier>).name === \"prototype\" ||\n        (key: $FlowSubtype<N.StringLiteral>).value === \"prototype\")\n    ) {\n      this.raise(key.start, Errors.StaticPrototype);\n    }\n\n    if (\n      this.isPrivateName(key) &&\n      this.getPrivateNameSV(key) === \"constructor\"\n    ) {\n      this.raise(key.start, Errors.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(\n    classBody: N.ClassBody,\n    member: N.StaticBlock & { decorators?: Array<N.Decorator> },\n  ) {\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(member.start, Errors.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(prop.key.start, Errors.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.start,\n    );\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    if (!node.typeAnnotation || this.match(tt.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-Initializer\n  parseInitializer(node: N.ClassProperty | N.ClassPrivateProperty): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (this.match(tt.name)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, Errors.MissingClassName);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n\n      node.source = null;\n      node.declaration = null;\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    } else if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorBeforeExport);\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(this.state.start, Errors.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    if (this.match(tt.name)) {\n      const value = this.state.value;\n      if ((value === \"async\" && !this.state.containsEsc) || value === \"let\") {\n        return false;\n      }\n      if (\n        (value === \"type\" || value === \"interface\") &&\n        !this.state.containsEsc\n      ) {\n        const l = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (l.type === tt.name && l.value !== \"from\") ||\n          l.type === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (this.match(tt.name) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    if (this.match(tt.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, Errors.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return (\n      this.state.type.keyword === \"var\" ||\n      this.state.type.keyword === \"const\" ||\n      this.state.type.keyword === \"function\" ||\n      this.state.type.keyword === \"class\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = ((node: any): N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(declaration.start, Errors.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportedName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type === \"StringLiteral\") {\n              this.raise(\n                specifier.start,\n                Errors.ExportBindingIsString,\n                local.value,\n                exportedName,\n              );\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, Errors.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    name: string,\n  ): void {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(\n        node.start,\n        name === \"default\"\n          ? Errors.DuplicateDefaultExport\n          : Errors.DuplicateExport,\n        name,\n      );\n    }\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\")\n        ? this.parseModuleExportName()\n        : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral<N.StringLiteral>(\n        this.state.value,\n        \"StringLiteral\",\n      );\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(\n          result.start,\n          Errors.ModuleExportNameHasLoneSurrogate,\n          surrogate[0].charCodeAt(0).toString(16),\n        );\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    }\n    // todo(Babel 8): remove module attributes support\n    else {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return this.match(tt.name);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n    contextDescription: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      if (this.match(tt.string)) {\n        node.key = this.parseLiteral<N.StringLiteral>(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      // for now we are only allowing `type` as the only allowed module attribute\n      if (keyName !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          keyName,\n        );\n      }\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          keyName,\n        );\n      }\n      attrNames.add(keyName);\n\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseLiteral<N.StringLiteral>(\n        this.state.value,\n        \"StringLiteral\",\n      );\n      this.finishNode<N.ImportAttribute>(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          node.key.name,\n        );\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          node.key.name,\n        );\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n        \"default import specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n        \"import namespace specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(this.state.start, Errors.DestructureNamedImport);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(node: N.ImportDeclaration): void {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(\n          specifier.start,\n          Errors.ImportBindingIsString,\n          imported.value,\n        );\n      }\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { types as tokTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nexport { tokTypes };\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n",null,null,null,null,null,null,null,"\"use strict\";\n\nexports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {\n    default: a\n  };\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {\n    value: true\n  });\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    } // Skip duplicate re-exports when they have the same value.\n\n\n    if (key in dest && dest[key] === source[key]) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      }\n    });\n  });\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get\n  });\n};","<template>\n  <div>\n    <PageTitle />\n    <PricingCard></PricingCard>\n  </div>\n</template>\n\n<script>\nimport PricingCard from \"./components/PricingCard/PricingCard.vue\";\nimport PageTitle from \"./components/PageTitle.vue\";\n\nexport default {\n  data() {\n    return {\n      name: \"Vue\",\n    };\n  },\n  components: {\n    PricingCard,\n    PageTitle,\n  },\n};\n</script>\n","<template>\n  <p>\n    Simple, traffic-based pricing Sign-up for our 30-day trial. No credit card\n    required.\n  </p>\n</template>\n\n<script>\nexport default {};\n</script>\n\n<style></style>\n","<template>\n  <div class=\"card\">\n    <div class=\"card-content card-body\">\n      <pricing-card-header views=\"100\" price=\"10\" />\n      <base-slider></base-slider>\n      <footer class=\"controls\">\n        <div class=\"option option-left\">Monthly Billing</div>\n        <base-switch-button class=\"switch\" />\n        <div class=\"option option-right\">\n          <span class=\"option-text\">Yearly Billing</span>\n          <span class=\"tag\">25% discount</span>\n        </div>\n      </footer>\n    </div>\n\n    <footer class=\"card-content\">\n      <ul>\n        <li>100% data ownership</li>\n        <li>Unlimited websites</li>\n        <li>Email reports</li>\n      </ul>\n      <base-button>Start my trial</base-button>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport PricingCardHeader from \"./PricingCardHeader.vue\";\nimport BaseSlider from \"../UI/BaseSlider.vue\";\nimport BaseSwitchButton from \"../UI/BaseSwitchButton.vue\";\nimport BaseButton from \"../UI/BaseButton.vue\";\n\nexport default {\n  components: { PricingCardHeader, BaseSlider, BaseSwitchButton, BaseButton },\n  data() {\n    return {\n      price: \"16.00\",\n      views: 100,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../assets/scss/variables.scss\";\n\n$text-primary: hsl(225, 20%, 60%);\n$text-secondary: hsl(227, 35%, 25%);\n\nfooter.controls {\n  font-size: 12px;\n  display: grid;\n  justify-content: center;\n  align-content: center;\n  grid-template-columns: 1fr 50px 1fr;\n  column-gap: 10px;\n  margin: 30px 0;\n  .switch {\n    margin: 0 0.8em;\n  }\n}\n.option-right {\n  place-self: left;\n  justify-self: stretch;\n}\n.option-left {\n  text-align: right;\n}\n.tag {\n  font-size: 10px;\n  line-height: 10px;\n  padding: 0 4px;\n  border-radius: 5px;\n  align-items: center;\n  text-align: center;\n  background: $discount-bg;\n  color: $discount-text;\n  margin-left: 0.5em;\n}\n\n.card {\n  color: $text-primary;\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  width: 540px;\n  border-radius: 10px;\n  font-size: 0.95em;\n  box-shadow: 0 10px 50px -18px rgba($color: #000000, $alpha: 0.3);\n  .card-body {\n    border-bottom: solid 1px rgba($color: #000000, $alpha: 0.1);\n    padding-top: 3em;\n  }\n}\n\n.card-content {\n  padding: 0 3em;\n}\n.card > footer {\n  padding-top: 2em;\n  padding-bottom: 2em;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\nul {\n  padding-left: 1em;\n}\nli {\n  list-style: url(\"../../assets/images/icon-check.svg\");\n  // padding-left: 0.5em;\n}\n</style>\n","<template>\n  <header>\n    <span class=\"page-views\">{{ views }}K Pageviews</span>\n    <span class=\"pricing\"\n      ><strong>${{ price }}</strong> /month</span\n    >\n  </header>\n</template>\n\n<script>\nexport default {\n  props: [\"views\", \"price\"],\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../assets/scss/variables.scss\";\nheader {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  .page-views {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n  }\n  .pricing {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    strong {\n      font-size: 2.1rem;\n      font-weight: 800;\n      color: $text-dark;\n      margin-right: 0.2em;\n    }\n  }\n}\n</style>\n","<template>\n  <div>\n    <div class=\"bar-container\">\n      <div class=\"bar-empty bar\"></div>\n      <div class=\"bar-full bar\" v-bind:style=\"fullBarStyle\"></div>\n      <input @input=\"updateSlider\" type=\"range\" min=\"0\" max=\"100\" />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      sliderValue: 50,\n    };\n  },\n  computed: {\n    fullBarStyle() {\n      return {\n        width: `${this.sliderValue}%`,\n      };\n    },\n  },\n  methods: {\n    updateSlider(e) {\n      this.sliderValue = e.target.value;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../assets/scss/variables.scss\";\n\n$track-w: 100%;\n$track-h: 0.4em;\n$thumb-d: 1.9em;\n$track-c: $empty-slider;\n$filll-c: $full-slider;\n\n@mixin track($fill: 0) {\n  box-sizing: border-box;\n\n  // @if $fill == 1 {\n  //   .js & {\n  //     background: linear-gradient($filll-c, $filll-c)\n  //       0 /\n  //       var(--sx)\n  //       100%\n  //       no-repeat\n  //       $track-c;\n  //   }\n  // }\n}\n.test {\n  height: 40px;\n  width: 40px;\n}\n\n@mixin fill() {\n  height: $track-h;\n  background: $filll-c;\n  border-radius: ($track-h/2);\n}\n\n@mixin thumb() {\n  box-sizing: border-box;\n  cursor: pointer;\n  width: $thumb-d;\n  height: $thumb-d;\n  border-radius: 50%;\n  // background: $slider-handle;\n  background: $slider-handle url(\"../../assets/images/icon-slider.svg\")\n    no-repeat center/60%;\n  transition: all 0.2s;\n  box-shadow: 0 8px 15px 0px rgba($color: $full-slider, $alpha: 0.8);\n  &:hover {\n    box-shadow: 0 9px 15px 3px rgba($color: $full-slider, $alpha: 0.8);\n    transform: scale(1.1);\n  }\n}\n\n.bar-container {\n  position: relative;\n  height: $thumb-d;\n}\n.bar {\n  @include fill();\n  background-color: $empty-slider;\n  position: absolute;\n  top: 5px;\n}\n.bar-empty {\n  width: 100%;\n}\n.bar-full {\n  background-color: $full-slider;\n}\n\n[type=\"range\"] {\n  &,\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n  }\n\n  --range: calc(var(--max) - var(--min));\n  --ratio: calc((var(--val) - var(--min)) / var(--range));\n  --sx: calc(0.5 *#{$thumb-d} + var(--ratio) * (100% - #{$thumb-d}));\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  width: $track-w;\n  height: $thumb-d;\n  background: transparent;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-webkit-slider-runnable-track {\n    @include track(1);\n  }\n  &::-moz-range-track {\n    @include track;\n  }\n  &::-ms-track {\n    @include track;\n  }\n\n  &::-moz-range-progress {\n    @include fill;\n  }\n  &::-ms-fill-lower {\n    @include fill;\n  }\n\n  &::-webkit-slider-thumb {\n    margin-top: 0.5 * ($track-h - $thumb-d);\n    @include thumb;\n  }\n  &::-moz-range-thumb {\n    @include thumb;\n  }\n  &::-ms-thumb {\n    margin-top: 0;\n    @include thumb;\n  }\n\n  &::-ms-tooltip {\n    display: none;\n  }\n}\n</style>\n","<template>\n  <div>\n    <div class=\"container\" @click=\"switchState\">\n      <div class=\"ball\" :class=\"position\"></div>\n    </div>\n    <input v-bind:value=\"isChecked\" type=\"checkbox\" name=\"switch\" id=\"switch\" />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"BaseSwitchButton\",\n  data() {\n    return {\n      position: \"left\",\n    };\n  },\n  computed: {\n    isChecked() {\n      return this.position === \"right\";\n    },\n  },\n  methods: {\n    switchState() {\n      if (this.position === \"left\") this.position = \"right\";\n      else this.position = \"left\";\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../assets/scss/variables.scss\";\n\n$btn-size: 12px;\n\n@mixin circle($size) {\n  width: $size;\n  height: $size;\n  border-radius: 100%;\n}\ninput {\n  display: none;\n}\n.container {\n  display: block;\n  cursor: pointer;\n  box-sizing: content-box;\n  width: $btn-size * 2.3;\n  height: $btn-size;\n  border-radius: $btn-size;\n  padding: 3px;\n  background: $toggle-bg;\n  transition: all 0.2s ease-in-out;\n\n  &:hover {\n    background: hsl(223, 50%, 80%);\n  }\n}\n.left {\n  transform: translateX(0);\n}\n.right {\n  transform: translateX(120%);\n}\n.ball {\n  @include circle($btn-size);\n  background: white;\n  position: relative;\n  transition: all 0.2s ease-in-out;\n}\n</style>\n","<template>\n  <button><slot></slot></button>\n</template>\n\n<script>\nexport default {\n  name: \"BaseButton\",\n  props: [\"name\"],\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../assets/scss/variables.scss\";\nbutton {\n  border: none;\n  background: $text-dark;\n  color: $cta-text;\n  font-size: 12px;\n  width: 170px;\n  height: 40px;\n  border-radius: 20px;\n  transition: all 0.2s;\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.02);\n    box-shadow: -3px 3px 5px rgba($color: $text-dark, $alpha: 0.1);\n  }\n}\n</style>\n"],"names":["HMR_HOST","HMR_PORT","HMR_SECURE","HMR_ENV_HASH","module","bundle","HMR_BUNDLE_ID","OVERLAY_ID","OldModule","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","undefined","checkedAssets","acceptedAssets","assetsToAccept","location","protocol","indexOf","hostname","port","parent","isParcelRequire","WebSocket","getHostname","getPort","test","ws","onmessage","event","JSON","parse","type","removeErrorOverlay","assets","filter","asset","envHash","handled","forEach","didAccept","hmrAcceptCheck","root","id","depsByBundle","console","clear","hmrApply","i","length","hmrAcceptRun","window","reload","ansiDiagnostic","diagnostics","ansi","stack","codeframe","error","message","hints","join","overlay","createErrorOverlay","html","document","body","appendChild","onerror","e","onclose","warn","getElementById","remove","log","createElement","errorHTML","diagnostic","map","hint","innerHTML","modules","parents","k","d","dep","Array","isArray","concat","getParents","link","newLink","cloneNode","onload","parentNode","removeChild","setAttribute","getAttribute","split","Date","now","insertBefore","nextSibling","cssTimeout","setTimeout","links","querySelectorAll","href","servedFromHMRServer","RegExp","absolute","origin","updateLink","reloadCSS","deps","Function","output","cached","cache","some","v","cb","assetsToAlsoAccept","apply","app","mount","exports","require","Object","defineProperty","value","str","expectsLowerCase","create","list","val","toLowerCase","PatchFlagNames","slotFlagsText","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","makeMap","range","source","start","end","lines","count","res","j","line","repeat","Math","max","String","lineLength","pad","min","specialBooleanAttrs","isSpecialBooleanAttr","isBooleanAttr","unsafeAttrCharRE","attrValidationCache","name","hasOwnProperty","isUnsafe","propsToAttrMap","acceptCharset","className","htmlFor","httpEquiv","isNoUnitNumericStyleProp","isKnownAttr","item","normalized","normalizeStyle","isString","parseStringStyle","key","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","tmp","trim","styles","normalizedKey","startsWith","hyphenate","normalizeClass","HTML_TAGS","SVG_TAGS","VOID_TAGS","isHTMLTag","isSVGTag","isVoidTag","escapeRE","string","match","exec","escaped","index","lastIndex","charCodeAt","substring","commentStripRE","src","replace","a","b","equal","looseEqual","aValidType","isDate","bValidType","getTime","looseCompareArrays","aKeysCount","keys","bKeysCount","aHasKey","bHasKey","arr","findIndex","toDisplayString","stringify","replacer","_key","isMap","size","entries","reduce","isSet","values","isPlainObject","babelParserDefaultPlugins","EMPTY_OBJ","freeze","EMPTY_ARR","NOOP","NO","onRE","isOn","isModelListener","extend","assign","el","splice","prototype","hasOwn","toTypeString","isFunction","isSymbol","isPromise","then","catch","objectToString","toString","toRawType","slice","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","hit","camelizeRE","camelize","_","c","toUpperCase","hyphenateRE","capitalize","charAt","toHandlerKey","hasChanged","oldValue","invokeArrayFns","fns","arg","def","obj","configurable","enumerable","toNumber","n","parseFloat","isNaN","_globalThis","getGlobalThis","globalThis","self","global","escapeHtml","escapeHtmlComment","generateCodeFrame","isSSRSafeAttrName","looseIndexOf","stringifyStyle","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","TokenType","constructor","label","conf","keyword","rightAssociative","binop","updateContext","keywords","Map","createKeyword","options","token","set","createBinop","types","num","bigint","decimal","regexp","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","isNewLine","code","skipWhiteSpace","isWhitespace","Position","col","column","SourceLocation","filename","identifierName","getLineInfo","input","offset","lineStart","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","hasPlugin","plugins","has","getPluginOption","plugin","get","last","CommentsParser","addComment","comment","loc","state","trailingComments","leadingComments","adjustCommentsAfterTrailingComma","node","elements","takeAllComments","lastElement","commentPreviousNode","newTrailingComments","leadingComment","processComment","commentStack","firstChild","lastChild","lastInStack","pop","properties","arguments","innerComments","firstTrailingCommentIndex","ErrorMessages","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","getLocationForPosition","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","raise","errorTemplate","params","raiseWithData","raiseOverwrite","errorRecovery","errors","_raise","errorContext","err","SyntaxError","isLookahead","superClass","estreeParseRegExpLiteral","pattern","flags","regex","estreeParseLiteral","estreeParseBigIntLiteral","bigInt","BigInt","estreeParseDecimalLiteral","parseLiteral","directiveToStmt","directive","directiveLiteral","stmt","startNodeAt","expression","extra","expressionValue","raw","finishNodeAt","initFunction","isAsync","checkDeclaration","isObjectProperty","getObjectOrClassMethodParams","method","isValidDirective","parenthesized","stmtToDirective","addExtra","parseBlockBody","args","directiveStatements","directives","pushClassMethod","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","parseExprAtom","refExpressionErrors","tt","parseMaybePrivateName","convertPrivateNameToPrivateIdentifier","getPrivateNameSV","isPrivateName","startPos","parseFunctionBody","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","parseClassProperty","propertyNode","parseClassPrivateProperty","parseObjectMethod","prop","isPattern","isAccessor","shorthand","parseObjectProperty","toAssignable","isLHS","toAssignableObjectExpressionProp","Errors","finishCallExpression","optional","callee","toReferencedArguments","parseExport","exported","specifiers","parseSubscript","base","noCalls","optionalChainMember","stop","chain","startNodeAtNode","hasPropertyAsPrivateName","isOptionalChain","isObjectMethod","TokContext","isExpr","preserveSpace","override","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionExpression","functionStatement","context","exprAllowed","out","curContext","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","isIteratorStart","current","next","SCOPE_OTHER","SCOPE_PROGRAM","SCOPE_FUNCTION","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS","SCOPE_STATIC_BLOCK","SCOPE_TS_MODULE","SCOPE_VAR","BIND_KIND_VALUE","BIND_KIND_TYPE","BIND_SCOPE_VAR","BIND_SCOPE_LEXICAL","BIND_SCOPE_FUNCTION","BIND_FLAGS_NONE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_CLASS","BIND_LEXICAL","BIND_VAR","BIND_FUNCTION","BIND_TS_INTERFACE","BIND_TS_TYPE","BIND_TS_ENUM","BIND_TS_AMBIENT","BIND_NONE","BIND_OUTSIDE","BIND_TS_CONST_ENUM","BIND_TS_NAMESPACE","BIND_FLOW_DECLARE_FN","CLASS_ELEMENT_FLAG_STATIC","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","CLASS_ELEMENT_KIND_ACCESSOR","CLASS_ELEMENT_STATIC_GETTER","CLASS_ELEMENT_STATIC_SETTER","CLASS_ELEMENT_INSTANCE_GETTER","CLASS_ELEMENT_INSTANCE_SETTER","CLASS_ELEMENT_OTHER","Scope","var","lexical","functions","ScopeHandler","scopeStack","undefinedExports","undefinedPrivateNames","inFunction","currentVarScope","allowSuper","currentThisScope","inClass","inStaticBlock","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","currentScope","createScope","enter","exit","scope","declareName","bindingType","checkRedeclarationInScope","maybeExportDefined","delete","isRedeclaredInScope","checkLocalExport","FlowScope","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","declaration","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","partition","list1","list2","FLOW_PRAGMA_REGEX","flowPragma","getScopeHandler","shouldParseTypes","shouldParseEnums","finishToken","matches","Error","flowParseTypeInitialiser","tok","oldInType","inType","expect","flowParseType","flowParsePredicate","moduloLoc","moduloPos","checksLoc","expectContextual","eat","parseExpression","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","parseIdentifier","typeNode","typeContainer","isRelational","flowParseTypeParameterDeclaration","flowParseFunctionTypeParams","rest","this","returnType","typeAnnotation","resetEndLocation","semicolon","flowParseDeclare","insideModule","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","unexpected","flowParseTypeAnnotatableIdentifier","bodyNode","parseImport","hasModuleExport","default","isLet","suggestion","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","jsxTagStart","defaultRequired","typeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","lookahead","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","callProperties","indexers","internalSlots","endDelim","exact","inexact","protoStart","inexactStart","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","argument","proto","flowCheckGetterSetterParams","property","paramCount","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","first","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","createIdentifier","flowParsePostfixType","canInsertSemicolon","elementType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatement","topLevel","flowParseEnumDeclaration","parseExpressionStatement","expr","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","refNeedsArrowPos","result","tryParse","failState","clone","originalNoArrowAt","noArrowAt","consequent","failed","tryParseConditionalConsequent","valid","invalid","getArrowLikeExpressions","alternate","parseMaybeAssign","noArrowParamsConversionAt","parseMaybeAssignAllowIn","disallowInvalid","arrows","finishArrowValidation","every","isAssignable","toAssignableList","trailingComma","checkParams","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","getTokenFromCode","finishOp","readWord","isBinding","element","operator","exprList","trailingCommaPos","toReferencedList","isParenthesizedExpr","parseArrayLike","close","canBePattern","isTuple","maybeInArrowParameters","checkLVal","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyName","isPrivateNameAllowed","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","left","shouldParseDefaultImport","parseImportSpecifierLocal","specifier","contextDescription","local","maybeParseDefaultImportSpecifier","parseImportSpecifier","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","parseBindingAtom","parseFunctionParams","allowModifiers","parseVarId","parseAsyncArrowFromCallExpression","shouldParseAsyncArrow","afterLeftParse","jsx","tc","j_oTag","j_expr","abort","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewArguments","targs","parseArrowExpression","readToken_mult_modulo","hasFlowComment","nextToken","readToken_pipe_amp","parseTopLevel","file","program","fileNode","skipBlockComment","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","enumName","memberName","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumErrorInconsistentMemberValues","flowEnumErrorInvalidExplicitType","suppliedType","flowEnumErrorInvalidMemberInitializer","explicitType","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","parseBooleanLiteral","flowEnumMemberRaw","init","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","add","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","empty","boolsLen","numsLen","strsLen","defaultedLen","nextTokenStart","afterNext","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","j_cTag","jsxName","jsxText","jsxTagEnd","isFragment","object","getQualifiedJSXName","namespace","jsxReadToken","chunkStart","ch","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","jsxReadString","quote","entity","substr","fromCodePoint","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","newNode","jsxParseAttributeValue","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","attributes","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","inPropertyName","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","PARAM_IN","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","tsIsAccessModifier","modifier","tsIsIdentifier","tsNextTokenCanFollowModifier","isLiteralPropertyName","tsParseModifier","allowedModifiers","tsTryParse","bind","tsParseModifiers","modified","disallowedModifiers","accessibility","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","tsParseDelimitedListWorker","expectSuccess","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","parseIdentifierName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsTryNextParseConstantContext","tsFillSignature","returnToken","signature","returnTokenRequired","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","tsParseTypeMember","idx","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","isLabeled","labeled","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","lookaheadCharCode","parseMaybeUnary","tsParseArrayTypeOrHigher","objectType","indexType","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","find","kw","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","braceStackCounter","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsNextThenParseType","tsParseHeritageClause","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","oldContext","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","prodParam","tsParseAmbientExternalModuleDeclaration","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","tsTryParseAndCatch","tsTryParseDeclare","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","hasFollowingLineBreak","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsIsDeclarationStart","parseAssignableListItem","decorators","parseAccessModifier","elt","pp","parameter","bodilessType","isDeclareContext","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","parseExprOp","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","cls","parseStatementContent","callParseClassMember","parseClassMemberWithIsStatic","inAbstractClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","resetStartLocation","parseClassPropertyAnnotation","definite","typeCast","ct","toAssignableParenthesizedExpression","parseMaybeDecoratorArguments","readToken_lt_gt","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","hasContextParam","parseCatchClauseParam","oldIsDeclareContext","oldInAbstractClass","hasBody","placeholder","parsePlaceholder","expectedNode","assertNoSpace","finishPlaceholder","isFinished","verifyBreakContinue","parseBlock","parseFunctionId","takeDecorators","oldStrict","parseClassBody","expectPlugin","isUnparsedContextual","nextTokenStartSince","maybeParseExportDefaultSpecifier","checkExport","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","parseV8Intrinsic","v8IntrinsicStart","identifier","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","moduleAttributesVerionPluginOption","mixinPlugins","estree","flow","typescript","v8intrinsic","placeholders","mixinPluginNames","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","getOptions","opts","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","bin","oct","dec","Token","Tokenizer","ParserErrors","pushToken","checkKeywordEscapes","old","curr","skip","setStrict","skipSpace","codePointAt","pushComment","block","text","skipLineComment","startSkip","loop","readToken_numberSign","readToken_interpreter","nextPos","readToken_dot","readNumber","readToken_slash","readRegexp","width","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_question","next2","readRadixNumber","readString","content","mods","char","charCode","readInt","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isBigInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","readCodePoint","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","octalStr","octal","readWord1","escStart","identifierCheck","esc","keywordTypes","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","from","declarePrivateName","classScope","redefined","accessor","oldStatic","newStatic","oldKind","newKind","usePrivateName","kExpression","kMaybeArrowParameterDeclaration","kMaybeAsyncArrowParameterDeclaration","kParameterDeclaration","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","recordDeclarationError","clearDeclarationError","iterateErrors","iterator","ExpressionScopeHandler","recordParameterInitializerError","recordParenthesizedIdentifierError","recordAsyncArrowParametersError","validateAsPattern","newParameterDeclarationScope","newArrowHeadScope","newAsyncArrowScope","newExpressionScope","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","expectOnePlugin","names","oldState","abortSignal","checkExpressionErrors","andThrow","shorthandAssign","doubleProto","initializeScopes","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","oldProdParam","oldExpressionScope","expressionScope","enterInitialScopes","paramFlags","ExpressionErrors","Node","parser","NodeUtils","locationNode","unwrapParenthesizedExpression","LValParser","isLast","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","toReferencedListDeep","parseSpread","parseRestBinding","parseObjectLike","closeCharCode","allowEmpty","elts","checkCommaAfterRest","parseDecorator","checkClashes","disallowLetBinding","strictModeChanged","elem","ExpressionParser","checkProto","isRecord","protoRef","used","shouldExitDescending","getExpression","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","parseMaybeAssignDisallowIn","parseYield","ownExpressionErrors","parseMaybeConditional","parseExprOps","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","checkExponentialAfterUnary","sawUnary","isAwait","isAwaitAllowed","parseAwait","parseModuleExpression","isDelete","parseUpdate","isAmbiguousAwait","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","parseSuper","parseImportMetaProperty","parseFunction","parseAsyncArrowUnaryFunction","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","nextCh","lookaheadCh","isPrivate","meta","parseMetaProperty","propertyName","innerStartPos","innerStartLoc","spreadStart","optionalCommaStart","spreadNodeStartPos","spreadNodeStartLoc","innerEndPos","innerEndLoc","arrowNode","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","cooked","tail","curElt","quasis","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","oldInPropertyName","generator","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","reservedTest","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","withTopicForbiddingContext","outerContextSoloAwaitState","prodParamToSet","prodParamToClear","revertScopes","parseProgram","loopLabel","switchLabel","FUNC_NO_FLAGS","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","FUNC_NULLABLE_ID","loneSurrogate","StatementParser","interpreter","parseInterpreterDirective","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","allowExport","currentContextDecorators","decorator","isBreak","lab","parseHeaderExpression","awaitAt","parseFor","parseVar","declarations","parseForIn","description","declarationPosition","discriminant","cases","cur","sawDefault","isCase","simple","handler","clause","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","isForIn","await","isFor","isTypescript","statement","isHangingStatement","requireId","constructorAllowsSuper","hadConstructor","parseClassStaticBlock","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","isSimple","maybeQuestionTokenStart","pushClassPrivateProperty","pushClassProperty","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","exportedName","nodes","surrogate","parseNext","maybeParseModuleAttributes","parseAssertEntries","attrs","attrNames","Parser","pluginsMap","pluginMap","getParser","ast","moduleError","getParserClass","parserClassCache","pluginsFromOptions","pluginList","factory","define","amd","estreeWalker","should_skip","should_remove","replacement","WalkerBase","leave","visit","_should_skip","_should_remove","_replacement","skipped","removed","instance","SyncWalker","AsyncWalker","asyncWalk","walk","reactivity","shared","vnode","msg","pauseTracking","component","appWarnHandler","appContext","config","warnHandler","trace","getComponentTrace","callWithErrorHandling","proxy","formatComponentName","warnArgs","formatTrace","resetTracking","currentVNode","normalizedStack","recurseCount","parentInstance","logs","entry","formatTraceEntry","isRoot","open","props","formatProps","formatProp","isRef","toRaw","ErrorTypeStrings","handleError","callWithAsyncErrorHandling","throwInDev","contextVNode","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","errorHandler","logError","info","pushWarningContext","popWarningContext","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","RECURSION_LIMIT","job","jobId","getId","middle","middleJobId","allowRecurse","findInsertionIndex","queueFlush","flushJobs","activeQueue","pendingQueue","queueCb","seen","parentJob","checkRecursiveUpdates","flushPreFlushCbs","deduped","sort","flushPostFlushCbs","isHmrUpdating","hmrDirtyComponents","globalObject","__VUE_HMR_RUNTIME__","createRecord","tryWrap","rerender","__hmrId","record","instances","isClassComponent","__vccOpts","newRender","render","renderCache","newComp","queuePostFlushCb","queueJob","hook","devtools","version","emit","Fragment","Text","Comment","Static","devtoolsComponentAdded","createDevtoolsComponentHook","devtoolsComponentUpdated","devtoolsComponentRemoved","uid","rawArgs","emitsOptions","propsOptions","validator","isValid","modelArg","modifiersKey","number","devtoolsComponentEmit","lowerCaseEvent","handlerName","onceHandler","emitted","comp","asMixin","deopt","__emits","emits","hasExtends","extendEmits","normalizedFromExtend","normalizeEmitsOptions","isRenderingCompiledSlot","setCompiledSlotRendering","slots","fallback","noSlotted","slot","openBlock","validSlotContent","ensureValidVNode","rendered","createBlock","scopeId","slotScopeIds","vnodes","child","isVNode","currentRenderingInstance","currentScopeId","__scopeId","withScopeId","_id","withCtx","ctx","renderFnWithContext","prevInstance","setCurrentRenderingInstance","closeBlock","_c","accessedAttrs","Component","withProxy","setupState","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","markAttrsAccessed","getFunctionalFallthrough","setRoot","patchFlag","getChildRoot","inheritAttrs","filterModelListeners","cloneVNode","allAttrs","eventAttrs","extraAttrs","dirs","isElementRoot","transition","blockStack","createVNode","rawChildren","dynamicChildren","childRoot","filterSingleRoot","dynamicIndex","updatedRoot","singleRoot","prevVNode","nextVNode","optimized","prevProps","prevChildren","nextProps","nextChildren","hasPropsChanged","dynamicProps","isEmitListener","$stable","nextKeys","subTree","isSuspense","__isSuspense","SuspenseImpl","process","n1","n2","container","anchor","parentComponent","parentSuspense","isSVG","rendererInternals","mountSuspense","patchSuspense","hydrate","hydrateSuspense","createSuspenseBoundary","Suspense","patch","o","hiddenContainer","suspense","pendingBranch","ssContent","ssFallback","setActiveBranch","um","unmount","newBranch","newFallback","activeBranch","isInFallback","isHydrating","isSameVNodeType","pendingId","effects","onPending","timeout","hasWarned","m","move","isUnmounted","resume","delayEnter","mode","afterLeave","hasUnresolvedAncestor","onResolve","fallbackVNode","onFallback","mountFallback","registerDep","setupRenderEffect","isInPendingSuspense","hydratedEl","asyncDep","asyncSetupResult","suspenseId","asyncResolved","handleSetupResult","updateHOCHostEl","doRemove","hydrateNode","normalizeSuspenseSlot","s","singleChild","branch","rawProps","isStateful","isSSR","InternalObjectKey","propsDefaults","setFullProps","validateProps","shallowReactive","rawPrevProps","rawCurrentProps","propsToUpdate","camelizedKey","resolvePropValue","kebabKey","trigger","needCastKeys","camelKey","opt","defaultValue","setCurrentInstance","__props","extendProps","normalizePropsOptions","validatePropName","booleanIndex","getTypeIndex","Boolean","stringIndex","ctor","getType","expectedTypes","isSameType","resolvedValues","validateProp","isAbsent","required","assertType","getInvalidTypeMessage","isSimpleType","receivedType","expectedValue","styleValue","receivedValue","isExplicable","isBoolean","explicitTypes","target","currentInstance","prepend","hooks","wrappedHook","__weh","unshift","apiName","createHook","lifecycle","isInSSRComponentSetup","injectHook","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","effect","doWatch","INITIAL_WATCHER_VALUE","immediate","deep","flush","onTrack","onTrigger","warnInvalidSource","getter","forceTrigger","_shallow","isReactive","traverse","cleanup","onInvalidate","baseGetter","runner","onStop","active","newValue","scheduler","queuePostRenderEffect","isMounted","queuePreFlushCb","lazy","recordInstanceBoundEffect","publicThis","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransitionImpl","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","setup","getCurrentInstance","useTransitionState","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","callHook","beforeEnter","leavingVNode","afterHook","cancelHook","called","done","_enterCb","cancelled","isKeepAlive","keepComment","keyedFragmentCount","__isKeepAlive","KeepAliveImpl","include","exclude","sharedContext","renderer","_unmount","storageContainer","activate","isDeactivated","vnodeHook","onVnodeMounted","invokeVNodeHook","deactivate","da","onVnodeUnmounted","resetShapeFlag","getComponentName","pruneCacheEntry","watch","pruneCache","pendingCacheKey","cacheSubtree","getInnerChild","rawVNode","cachedVNode","KeepAlive","registerKeepAliveHook","__wdc","injectToKeepAliveRoot","keepAliveRoot","injected","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","updateSlots","needDeletionCheck","deletionComparisonTarget","isBuiltInDirective","internalInstance","bindings","dir","modifiers","mounted","updated","oldBindings","binding","isNativeTag","performance","globalProperties","optionMergeStrategies","isCustomElement","components","provides","rootComponent","rootProps","createAppContext","installedPlugins","_uid","_component","_props","_container","_context","use","install","mixin","validateComponentName","validateDirectiveName","rootContainer","isHydrate","__vue_app__","devtoolsInitApp","devtoolsUnmountApp","provide","hasMismatch","isSVGContainer","namespaceURI","tagName","isComment","nodeType","mt","mountComponent","patchProp","insert","createComment","hasChildNodes","isFragmentStart","onMismatch","handleMismatch","ref","domType","nextNode","needToAdoptContent","staticCount","outerHTML","hydrateFragment","hydrateElement","hydrateComponent","loadAsync","__asyncLoader","locateClosingAsyncAnchor","hydrateChildren","setRef","invokeDirectiveHook","onClick","vnodeHooks","onVnodeBeforeMount","queueEffectWithSuspense","textContent","parentVNode","fragmentSlotScopeIds","supported","perf","isSupported","mark","startTag","endTag","measure","clearMarks","isAsyncWrapper","loader","loadingComponent","errorComponent","delay","suspensible","onError","userOnError","pendingRequest","resolvedComp","retries","retry","load","thisRequest","reject","userRetry","userFail","__esModule","Symbol","toStringTag","defineComponent","createInnerComp","loaded","delayed","rtc","rtg","rawRef","oldRawRef","r","exposed","owner","oldRef","refs","doSet","baseCreateRenderer","createHydrationFunctions","createHydrationFns","__VUE__","setDevtoolsHook","__VUE_DEVTOOLS_GLOBAL_HOOK__","hostInsert","hostRemove","hostPatchProp","forcePatchProp","hostForcePatchProp","hostCreateElement","createText","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","hostCloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","patchStaticNode","processFragment","processElement","processComponent","internals","removeStaticNode","moveStaticNode","mountElement","patchElement","is","mountChildren","unmountChildren","needCallTransitionHooks","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","class","style","areChildrenSVG","patchBlockChildren","traverseStaticChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","updateComponent","initialVNode","createComponentInstance","registerHMR","startMeasure","setupComponent","endMeasure","shouldUpdateComponent","updateComponentPreRender","invalidateJob","bm","renderComponentRoot","scopedInitialVNode","bu","u","originNext","nextTree","prevTree","createDevEffectOptions","updateProps","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","nextChild","parentAnchor","l2","e1","e2","s1","s2","keyToNewIndexMap","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","moveType","needTransition","performLeave","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","removeFragment","performRemove","unregisterHMR","bum","_vnode","mc","pc","pbc","createApp","createAppAPI","shallow","ch1","arrI","isTeleport","__isTeleport","isTeleportDisabled","disabled","isTargetSVG","SVGElement","resolveTarget","select","targetSelector","to","TeleportImpl","querySelector","mainAnchor","targetAnchor","wasDisabled","currentContainer","currentAnchor","moveTeleport","nextTarget","hydrateTeleport","isReorder","targetNode","_lpa","Teleport","COMPONENTS","DIRECTIVES","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","selfName","registry","currentBlock","disableTracking","shouldTrack","__v_isVNode","vnodeArgsTransformer","transformer","createVNodeWithArgsTransform","_createVNode","normalizeKey","normalizeRef","isBlockNode","cloned","normalizeChildren","isProxy","klass","normalizeSuspenseChildren","extraProps","mergeRef","mergedProps","mergeProps","deepCloneVNode","flag","numberOfNodes","asBlock","slotFlag","createTextVNode","toMerge","existing","incoming","parentProvides","treatDefaultAsFactory","shouldCacheAccess","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computedOptions","methods","watchOptions","provideOptions","inject","injectOptions","beforeMount","beforeUpdate","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","expose","globalMixins","callSyncHook","applyMixins","applyOptions","checkDuplicateProperties","createDuplicateChecker","methodHandler","writable","dataFn","resolveData","rawData","createWatcher","Reflect","ownKeys","onActivated","onDeactivated","proxyRefs","toRef","callHookWithMixinAndExtends","selfHook","reactive","createPathGetter","path","segments","__merged","mergeOptions","strats","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","shallowReadonly","$attrs","$slots","$refs","$parent","$root","$emit","$options","resolveMergedOptions","$forceUpdate","$nextTick","nextTick","$watch","instanceWatch","PublicInstanceProxyHandlers","accessCache","normalizedProps","publicGetter","cssModule","track","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","uid$1","setupContext","bc","createRenderContext","isBuiltInTag","appIsNativeTag","initProps","setupResult","setupStatefulComponent","Proxy","exposePropsOnRenderContext","createSetupContext","resolvedResult","finishComponentSetup","__ssrInlineRender","ssrRender","devtoolsRawSetupState","exposeSetupStateOnRenderContext","compile","isRuntimeOnly","_compile","delimiters","_rc","attrHandlers","deleteProperty","classifyRE","classify","displayName","__file","inferFromRegistry","getterOrOptions","propsOrChildren","ssrContextKey","useSSRContext","vueStyle","numberStyle","stringStyle","keywordStyle","formatter","header","__isVue","genRefFlag","formatValue","isReadonly","formatInstance","blocks","createInstanceBlock","extractKeys","asRaw","Comp","extracted","isKeyOfType","devtoolsFormatters","renderItem","isInteger","dynamicSlots","_ssrUtils","ssrUtils","customRef","markRaw","shallowRef","toRefs","triggerRef","unref","createCommentVNode","createHydrationRenderer","createRenderer","createSlots","createStaticVNode","defineAsyncComponent","defineEmit","defineProps","h","initCustomFormatter","popScopeId","pushScopeId","registerRuntimeCompiler","renderList","renderSlot","resolveComponent","resolveDirective","resolveDynamicComponent","setBlockTracking","toHandlers","transformVNodeArgs","useContext","watchEffect","withDirectives","script","initialize","PricingCard","PageTitle","_withId","_cache","PricingCardHeader","BaseSlider","BaseSwitchButton","BaseButton","price","views","_hoisted_1","_hoisted_2","_hoisted_3","sliderValue","fullBarStyle","updateSlider","onInput","position","isChecked","switchState","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_component_pricing_card_header","_component_base_slider","_component_base_switch_button","_component_base_button","_component_PageTitle","_component_PricingCard"],"version":3,"file":"index.3fafb3e2.js.map","sourceRoot":"/__parcel_source_root/"}